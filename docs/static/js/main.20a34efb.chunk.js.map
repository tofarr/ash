{"version":3,"sources":["modules/utils/date.ts","modules/utils/msgs/MsgType.ts","modules/utils/db.ts","modules/settings/settingsSchema.ts","modules/settings/SettingsDAO.ts","modules/utils/msgs/service.ts","modules/settings/SettingsService.ts","modules/settings/useSettings.ts","modules/utils/components/Loader.tsx","modules/settings/components/SettingsLoader.tsx","modules/utils/components/CustomTheme.tsx","modules/utils/msgs/components/MsgContainer.tsx","modules/utils/msgs/components/MsgIcon.tsx","modules/utils/msgs/components/MsgList.tsx","modules/utils/msgs/components/MsgDialog.tsx","modules/utils/money/service.ts","modules/utils/money/Money.tsx","modules/transactions/types/TransactionCode.ts","modules/transactions/types/TransactionBreakdownCode.ts","modules/transactions/schemas/transactionBreakdownSchema.ts","modules/utils/schemas.ts","modules/transactions/schemas/transactionSchema.ts","modules/transactions/transactionDAO.ts","modules/utils/Err.ts","modules/transactions/transactionService.ts","modules/contributionBoxes/contributionBoxSchema.ts","modules/contributionBoxes/contributionBoxDAO.ts","modules/contributionBoxes/contributionBoxService.ts","modules/utils/pdf.ts","modules/transactions/S26Service.ts","modules/transactions/S30Service.ts","modules/transactions/components/MonthTransactionsRow.tsx","modules/utils/components/Alert.tsx","modules/utils/components/ConfirmButton.tsx","modules/utils/components/ListCollapse.tsx","modules/utils/components/CodeSelect.tsx","modules/utils/money/MoneyInput.tsx","modules/transactions/components/BreakdownRow.tsx","modules/transactions/components/BreakdownList.tsx","modules/utils/components/DateSelect.tsx","modules/transactions/components/TransactionForm.tsx","modules/transactions/components/UpdateTransactionController.tsx","modules/transactions/schemas/monthTransactionsSchema.ts","modules/transactions/schemas/transactionSetSchema.ts","modules/transactions/schemas/dateBalanceSchema.ts","modules/transactions/components/WarningList.tsx","modules/transactions/components/MonthWarningsController.tsx","modules/transactions/components/DateBalanceController.tsx","modules/utils/useQuery.ts","modules/transactions/components/MonthWarningsDialog.tsx","modules/transactions/components/MonthTransactionsController.tsx","modules/meetings/contributionBoxContributionsSchema.ts","modules/meetings/MeetingService.ts","modules/meetings/MeetingSchema.ts","modules/meetings/components/MeetingForm.tsx","modules/meetings/components/CreateMeetingController.tsx","modules/deposits/DepositSchema.ts","modules/deposits/DepositService.ts","modules/deposits/components/DepositForm.tsx","modules/deposits/components/CreateDepositController.tsx","modules/transferToBranch/transferToBranchDAO.ts","modules/transactions/TO62Service.ts","modules/transferToBranch/TransferToBranchService.ts","modules/transferToBranch/TransferToBranchSchema.ts","modules/transferToBranch/components/TransferToBranchForm.tsx","modules/transferToBranch/components/CreateTransferToBranchController.tsx","modules/transactions/components/CreateTransactionController.tsx","modules/utils/components/SerialNavigation.tsx","modules/months/MonthListController.tsx","modules/utils/components/IntInput.tsx","modules/settings/components/SettingsForm.tsx","modules/settings/components/SettingsController.tsx","modules/contributionBoxes/components/ContributionBoxForm.tsx","modules/contributionBoxes/components/UpdateContributionBoxController.tsx","modules/contributionBoxes/components/CreateContributionBoxController.tsx","modules/contributionBoxes/components/ContributionBoxesController.tsx","modules/transferToBranch/components/DefaultBreakdownController.tsx","modules/nav/NavMenuController.tsx","modules/nav/NavBarController.tsx","modules/utils/msgs/components/CurrentMsgContainer.tsx","modules/utils/msgs/components/CurrentMsgBar.tsx","modules/backups/FileDAO.ts","modules/backups/backupSettingsDAO.ts","modules/backups/backupSettingsSchema.ts","modules/backups/backupService.ts","modules/backups/backupSchema.ts","modules/backups/components/BackupsController.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DATE_FORMAT","MONTH_FORMAT","todayStr","moment","format","thisMonthStr","dateToMonth","date","substring","MsgType","db","Dexie","settingsSchema","object","shape","formatting","date_format","string","required","month_format","congregation_name","city","province_or_state","accounts_servant_or_overseer","authorized_signer","other_account_description","cash_box","boolean","min_num_interest","number","integer","min","min_num_expenditure","meeting_days","sun","mon","tue","wed","thu","fri","sat","table","DbService","store","settings","Promise","resolve","reject","validate","then","put","version","stores","subscribers","msgs","addMsg","msg","type","Info","push","timestamp","Date","_publish","clearMsgs","length","subscribeToMsgs","callback","unsubscribeFromMsgs","index","indexOf","splice","console","error","forEach","subscriber","loadSettings","get","currentDateStr","dateStr","undefined","useSettings","Error","setSettings","updatedSettings","Loader","Box","p","Grid","container","justify","item","CircularProgress","SettingsLoader","children","useState","working","setWorking","loadedSettings","setLoadedSettings","useEffect","theme","createMuiTheme","palette","primary","main","secondary","CustomTheme","ThemeProvider","MsgContainer","props","state","setMsgs","bind","this","setState","Component","MsgIcon","color","Warning","MsgList","onClearMsgs","dateFormat","useTheme","smUp","useMediaQuery","breakpoints","up","spacing","direction","Typography","gutterBottom","variant","xs","sm","Button","fullWidth","onClick","map","key","getTime","alignItems","style","minWidth","m","renderTimestamp","pb","pt","Divider","MsgDialog","open","setOpen","pr","Dialog","onClose","toMoneyS","value","cents","Math","abs","toString","padStart","trunc","TransactionCode","Money","fontWeight","textAlign","describeTransactionCode","code","W","C","D","CE","I","E","CCE","S","B","CBT","CUC","CUW","CUO","describeTransactionCodeShort","isLocalCongregation","TransactionBreakdownCode","describeTransactionBreakdownCode","WW_BOX","WW_RESOLUTION","KHAHC","GAA","COAA","OTHER","describeTransactionBreakdownCodeShort","transactionBreakdownSchema","id","positive","oneOf","Object","keys","description","amt","test","str","transactionSchema","receipts_amt","when","cash","cheques","schema","max","primary_amt","other_amt","apply_on_date","breakdown","array","of","transaction","total","reduce","sum","create","add","destroy","delete","list","date_min","date_max","apply_on_date_min","apply_on_date_max","collection","range","sortBy","orderBy","toArray","attr","filter","val","where","between","aboveOrEqual","below","transactions","err","getMsg","message","dao","addErr","read","update","newInstance","loadDateBalance","dateBalance","receipts","other","applied_receipts","applied_primary","applied_other","buildBalance","loadTransactionSet","start","isPending","contributionBoxSchema","title","contributionBox","box","contribution_boxes","on","libraryReady","transformPdf","url","fieldValues","a","async","script","document","createElement","src","onload","onerror","body","appendChild","fetch","response","arrayBuffer","transformedBuffer","window","pdfform","transform","downloadUrlForTransformedPdf","blob","Blob","dataUrl","URL","createObjectURL","fillAndDownloadPdf","downloadUrl","target","href","display","click","remove","setTimeout","revokeObjectURL","buildPendingPrimaryDeposits","transactionSet","processTransaction","context","rowNum","getCodeStr","fillFormFromTransaction","receiptsIn","receiptsOut","primaryIn","primaryOut","otherIn","otherOut","updateContext","fillOtherReconcilliation","end","pendingOtherCharges","buildPendingOtherCharges","pendingOtherDeposits","buildPendingOtherDeposits","offset","fillSummary","fillPrimaryReconcilliation","pendingPrimaryDeposits","fillCashBox","pendingPrimaryCharges","buildPendingPrimaryCharges","fillBankAccount","buildTotalCongregationReceipts","fillInHeading","fillInReceipts","congregationBoxTotal","congregationElectronicTotal","interest","totalCongregationReceipts","worldwideBoxTotal","construction","totalOtherReceipts","totalReceipts","sumBreakdowns","s","fillInDisbursements","khExpenses","wwResolutionTotal","khahcTotal","gaaTotal","coaaTotal","otherTotal","totalCong","wwBoxes","constBoxes","totalOther","totalDisbursements","fillInTotals","disbursements","fillInSummary","totalCongregationDisbursements","buildTotalCongregationDisbursements","openingBalance","transferredToBranch","MonthTransactionsRow","md","Alert","ConfirmButton","buttonProps","confirmText","event","defaultProps","ListCollapse","handleRemove","renderWrapper","wrappers","items","in","targetIn","identifier","wrapper","find","i","findIndex","newProps","slice","doRemovals","doInsertionsAndUpdates","doUpdate","Collapse","timeout","onExited","component","animation","CodeSelect","label","options","keyFn","titleFn","descriptionFn","onChange","focus","setFocus","TextField","onFocus","onBlur","inputProps","caretColor","option","MoneyInput","name","helperText","internalValue","setInternalValue","prevValue","setPrevValue","handleChange","newInternalValue","round","Number","parseFloat","fromMoneyS","select","onKeyDown","TransactionBreakdownRow","descriptionRequired","amtRequired","multiline","TransactionBreakdownList","breakdowns","newBreakdown","setNewBreakdown","renderItem","renderItemLayout","handleBreakdownUpdate","b","newBreakdowns","handleBreakdownDelete","button","BreakdownRow","handleBreakdownCreate","DateSelect","displayFormat","valueStr","handleFocus","newFocus","utils","MomentUtils","DatePicker","newDate","newMoment","TransactionForm","onSubmit","internalTransaction","setInternalTransaction","hasBreakdown","descriptionError","setDescriptionError","decorateTransaction","newTransaction","preventDefault","_code","confirmation_code","pl","FormControlLabel","control","Checkbox","checked","UPDATE_TRANSACTION_PATH","updateTransactionPath","transactionId","replace","UpdateTransactionController","setTitle","useHistory","parseInt","useParams","setTransaction","mounted","monthTransactionsPath","MonthTransactionsSchema","monthTransactions","boxes","missingContributions","month","meetingDays","startOf","monthNum","meetingDates","day","createError","join","duplicateTransactions","unappliedTransactions","WarningList","warnings","warning","MONTH_WARNINGS_PATH","MonthWarningsController","setWarnings","all","listContributionBoxes","loadedTransactionSet","monthTransactionsSchema","abortEarly","errors","DATE_BALANCE_PATH","dateBalancePath","path","DateBalanceController","setDateBalance","pendingTransactions","setPendingTransactions","query","URLSearchParams","useLocation","search","loadedDateBalance","MonthWarningsDialog","MONTH_TRANSACTIONS_PATH","MonthTransactionsController","setTransactionSet","endBalance","setEndBalance","warningsOpen","setWarningsOpen","handleMonthChange","delta","newMonth","handleWarnings","monthWarningsPath","renderHeaderCol","year","fillAndDownloadS26","fillAndDownloadS30","disabled","NUM","createMeeting","meeting","handleReject","special_contribution_boxes","initTransaction","MeetingForm","internalMeeting","setInternalMeeting","totalCash","totalCheques","renderRowLayout","divider","handleBox","onCashChange","onChequesChange","isNaN","renderRow","CreateMeetingController","setMeeting","newMeeting","newDeposit","createDeposit","deposit","DepositForm","internalDeposit","setInternalDeposit","newCash","newCheques","CreateDepositController","setDeposit","restore","oldBreakdowns","bulkDelete","bulkAdd","getWithCode","fillAndDownloadTO62","len","toTransaction","transferToBranch","transaction_breakdowns","TransferToBranchForm","transfer","internalTransfer","setInternalTransfer","BreakdownList","pdf","fillAndDownloadTO62ForTransfer","CreateTransferToBranchController","setTransfer","clone","listTransactions","transferToBranchDAO","defaultBreakdown","wwBox","idOffset","newTransferToBranch","createTransferToBranch","CreateTransactionController","SerialNavigation","onPrev","onNext","MONTH_LIST_PATH","monthListPath","MonthListController","handleYear","newYear","renderMonth","monthStr","handleMonth","months","renderMonths","IntInput","SettingsForm","renderMeetingDay","SettingsController","internalSettings","setInternalSettings","ContributionBoxForm","UPDATE_CONTRIBUTION_BOX_PATH","UpdateContributionBoxController","boxId","setBox","CONTRIBUTION_BOXES_PATH","handleDelete","CreateContributionBoxController","ContributionBoxesController","setBoxes","DefaultBreakdownController","setBreakdown","handleSubmit","NAV_MENU_PATH","NavMenuController","handleClick","destination","renderMenuItem","icon","NavBarController","handleNavMenu","AppBar","position","Toolbar","IconButton","edge","aria-label","flexGrow","CurrentMsgContainer","timeoutId","clearMsg","clearInterval","msgTimeout","CurrentMsgBar","background","contrastText","save","backup","jsonStr","JSON","stringify","TextEncoder","encode","download","backed_up_at","loadBackupSettings","backupSettings","dao_code","fileDAO","storeBackupSettings","backupSettingsDAO","saveBackup","SettingsService","transactionDAO","contributionBoxDAO","default_transaction_breakdowns","getDAO","storeBackup","restoreFromBackup","promises","apply","SettingsDAO","oldBoxes","backup_settings","BackupsController","setBackupSettings","backedUpAt","renderMostRecentBackup","file","files","reader","FileReader","result","parse","setGlobalSettings","readAsText","accept","querySelector","App","Container","from","exact","to","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","process","origin","addEventListener","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.20a34efb.chunk.js","sourcesContent":["import moment from 'moment';\n\nexport const DATE_FORMAT = 'YYYY-MM-DD';\nexport const MONTH_FORMAT = 'YYYY-MM';\n\nexport function todayStr(){\n  return moment().format(DATE_FORMAT);\n}\n\nexport function thisMonthStr(){\n  return moment().format(MONTH_FORMAT);\n}\n\nexport function thisYear(){\n  return moment().year();\n}\n\nexport function dateToMonth(date: string){\n  return date.substring(0, 7);\n}\n","\nenum MsgType{\n  Info,\n  Warning,\n  Error,\n}\n\nexport default MsgType;\n","import Dexie from 'dexie';\n\nconst db = new Dexie('ash');\n\nexport default db;\n","import { boolean, number, object, string } from 'yup';\n\nexport default function settingsSchema(){\n  return object().shape({\n    formatting: formattingSchema().required(),\n\n    congregation_name: string(),\n    city: string(),\n    province_or_state: string(),\n    accounts_servant_or_overseer: string(),\n    authorized_signer: string(),\n    other_account_description: string(),\n\n    cash_box: boolean().required(),\n    min_num_interest: number().integer().min(0).required(),\n    min_num_expenditure: number().integer().min(0).required(),\n\n    meeting_days: meetingDaysSchema().required(),\n  })\n}\n\nexport function formattingSchema(){\n  return object().shape({\n    date_format: string().required(),\n    month_format: string().required(),\n  });\n}\n\nexport function meetingDaysSchema(){\n  return object().shape({\n    sun: boolean().required(),\n    mon: boolean().required(),\n    tue: boolean().required(),\n    wed: boolean().required(),\n    thu: boolean().required(),\n    fri: boolean().required(),\n    sat: boolean().required(),\n  });\n}\n//Validate settings\n","\nimport DbService from '../utils/db';\nimport Settings from './Settings';\nimport settingsSchema from './settingsSchema';\n\nDbService.version(1).stores({\n  settings: ''\n})\n\nfunction table(){\n  return DbService.table<Settings>('settings');\n}\n\nexport function load(){\n  return table().get(1);\n}\n\nexport function store(settings: Settings){\n  return new Promise((resolve, reject) => {\n    settingsSchema().validate(settings).then(() => {\n      table().put(settings, 1).then(resolve, reject);\n    }, reject);\n  });\n}\n","import Msg from './Msg';\nimport MsgType from './MsgType';\n\nconst subscribers: ((msgs: Msg[]) => void)[] = [];\nexport const msgs: Msg[] = [];\n\nexport function addMsg(msg:string, type:MsgType = MsgType.Info){\n  msgs.push({\n    type,\n    msg,\n    timestamp: new Date(),\n  });\n  _publish();\n}\n\nexport function clearMsgs(){\n  msgs.length = 0;\n  _publish();\n}\n\nexport function subscribeToMsgs(callback: (msg: Msg[]) => void){\n  subscribers.push(callback);\n}\n\nexport function unsubscribeFromMsgs(callback: (msg: Msg[]) => void){\n  const index = subscribers.indexOf(callback);\n  if(index >= 0){\n    subscribers.splice(index, 1);\n  }else{\n    console.error('Attempted to unsubscribe callback which was not subscribed!', callback);\n  }\n}\n\nfunction _publish(){\n  subscribers.forEach((subscriber) => subscriber(msgs));\n}\n","\n// import AvailableLocale from './AvailableLocale';\nimport moment from 'moment';\nimport Settings, { MeetingDays } from './Settings';\nimport { DATE_FORMAT, MONTH_FORMAT } from '../utils/date';\nimport { load, store } from './SettingsDAO';\nimport { addMsg } from '../utils/msgs/service';\n\nfunction newSettings(): Settings{\n  return {\n    // locale: AvailableLocale.en,\n    formatting: {\n      date_format: 'MMM D YYYY',\n      month_format: 'MMM YYYY',\n    },\n\n    congregation_name: '',\n    city: '',\n    province_or_state: '',\n    accounts_servant_or_overseer: '',\n    authorized_signer: '',\n    other_account_description: '',\n\n    cash_box: false,\n    min_num_interest: 1,\n    min_num_expenditure: 1,\n\n    meeting_days: {\n      sun: true,\n      mon: false,\n      tue: false,\n      wed: false,\n      thu: true,\n      fri: false,\n      sat: false,\n    },\n  }\n}\n\nexport function loadSettings(){\n  return new Promise<Settings>((resolve, reject) => {\n    load().then((settings) => {\n      resolve(settings || newSettings());\n    }, reject);\n  });\n}\n\nexport function storeSettings(settings: Settings){\n  return new Promise<Settings>((resolve, reject) => {\n    store(settings).then(() => {\n      addMsg('Settings Updated');\n      resolve(settings);\n    }, reject);\n  });\n}\n\nexport function meetingDates(month: string, meetingDays: MeetingDays) {\n  let m = moment(month, MONTH_FORMAT).startOf('month');\n  let monthNum = m.month();\n  let meetingDates: string[] = [];\n  while(m.get('month') === monthNum){\n    if(((m.day() === 0) && meetingDays.sun) ||\n        ((m.day() === 1) && meetingDays.mon) ||\n        ((m.day() === 2) && meetingDays.tue) ||\n        ((m.day() === 3) && meetingDays.wed) ||\n        ((m.day() === 4) && meetingDays.thu) ||\n        ((m.day() === 5) && meetingDays.fri) ||\n        ((m.day() === 6) && meetingDays.sat)){\n        meetingDates.push(m.format(DATE_FORMAT));\n    }\n    m.add(1, 'day');\n  }\n  return meetingDates;\n}\n\nexport function currentDateStr(settings: Settings){\n  return moment().format(settings.formatting.date_format);\n}\n\nexport function dateStr(settings: Settings, date: string){\n  return moment(date, DATE_FORMAT)\n    .format(settings.formatting.date_format);\n}\n","import Settings from './Settings';\n\nlet settings: Settings|undefined = undefined;\n\nexport default function useSettings(){\n  if(!settings){\n    throw new Error(\"Settings not set - SettingsLoader should be a parent of the calling component\");\n  }\n  return settings;\n}\n\nexport function setSettings(updatedSettings: Settings){\n  settings = updatedSettings;\n}\n","import React, { FC } from 'react';\nimport { Box, CircularProgress, Grid } from '@material-ui/core';\n\nconst Loader: FC = () => {\n  return (\n    <Box p={2}>\n      <Grid container justify=\"center\">\n        <Grid item>\n          <CircularProgress />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Loader;\n","import React, { FC, ReactElement, useEffect, useState } from 'react';\nimport Settings from '../../settings/Settings';\nimport { loadSettings } from '../SettingsService';\nimport { setSettings } from '../useSettings';\nimport Loader from '../../utils/components/Loader';\n\nexport interface SettingsLoaderProps{\n  children: (settings: Settings) => ReactElement | null;\n}\n\nconst SettingsLoader: FC<SettingsLoaderProps> = ({ children }) => {\n\n  const [working, setWorking] = useState(false);\n  const [loadedSettings, setLoadedSettings] = useState<undefined|Settings>(undefined);\n\n  useEffect(() => {\n    setWorking(true);\n    loadSettings().then((settings) => {\n      setLoadedSettings(settings);\n      setSettings(settings);\n      setWorking(false);\n    }, () => setWorking(false));\n  }, []);\n\n  if(working){\n    return <Loader />;\n  }\n\n  if(!loadedSettings){\n    return null;\n  }\n\n  return children(loadedSettings);\n}\n\n\nexport default SettingsLoader;\n","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#4a6da7',\n    },\n    secondary: {\n      main: '#FFCC00',\n    },\n    error: {\n      main: '#CC3300',\n    }\n  }\n});\n\nconst CustomTheme: React.FC = ({ children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      {children}\n    </ThemeProvider>\n  );\n}\n\nexport default CustomTheme;\n","import { Component, ReactElement } from 'react';\nimport { subscribeToMsgs, unsubscribeFromMsgs, clearMsgs } from '../service';\nimport Msg from '../Msg';\n\nexport interface MsgContainerProps {\n  children: (msgs: Msg[], clearMsgs: () => void) => ReactElement | null;\n}\n\nexport interface MsgContainerState {\n  msgs: Msg[],\n}\n\nexport default class MsgContainer extends Component<MsgContainerProps, MsgContainerState> {\n  state = {\n    msgs: []\n  }\n\n  constructor(props:MsgContainerProps){\n    super(props);\n    this.setMsgs = this.setMsgs.bind(this);\n  }\n\n  setMsgs(msgs: Msg[]){\n    this.setState({ msgs });\n  }\n\n  componentDidMount(){\n    subscribeToMsgs(this.setMsgs);\n  }\n\n  componentWillUnmount(){\n    unsubscribeFromMsgs(this.setMsgs);\n  }\n\n  render(){\n    return this.props.children(this.state.msgs, clearMsgs);\n  }\n}\n","import React, { FC } from 'react';\nimport InfoIcon from '@material-ui/icons/Info';\nimport ErrorIcon from '@material-ui/icons/Error';\n\nimport Msg from '../Msg';\nimport MsgType from '../MsgType';\n\nexport interface MsgIconProps {\n  msg: Msg;\n  color?: 'inherit' | 'primary' | 'secondary' | 'action' | 'disabled' | 'error';\n}\n\nconst MsgIcon: FC<MsgIconProps> = ({ msg, color }) => {\n\n  const { type } = msg;\n\n  switch(type){\n    case MsgType.Info:\n      return <InfoIcon color={color || 'primary'} />\n    case MsgType.Warning:\n    case MsgType.Error:\n      return <ErrorIcon color={color || 'error'} />\n    default:\n      return null;\n  }\n}\n\nexport default MsgIcon;\n","import React, { FC } from 'react';\nimport moment from 'moment';\nimport { Box, Button, Divider, Grid, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport Msg from '../Msg';\nimport MsgIcon from './MsgIcon';\n\nexport interface MsgListProps {\n  msgs: Msg[];\n  onClearMsgs?: () => void;\n  dateFormat: string;\n}\n\nconst MsgList: FC<MsgListProps> = ({ msgs, onClearMsgs, dateFormat }) => {\n\n  const theme = useTheme();\n  const smUp = useMediaQuery(theme.breakpoints.up('sm'));\n\n  function renderMsg(msg: Msg){\n    return (\n      <Grid item key={msg.timestamp.getTime()}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs={1} style={{minWidth:32}}>\n            <MsgIcon msg={msg} />\n          </Grid>\n          <Grid item>\n            {renderTimestamp(msg.timestamp)}\n          </Grid>\n          <Grid item xs>\n            <Box pb={1} pt={1}>\n              {msg.msg}\n            </Box>\n          </Grid>\n        </Grid>\n        <Divider />\n      </Grid>\n    )\n  }\n\n  function renderTimestamp(date: Date){\n    const m = moment(date);\n    return (\n      <Grid container direction={smUp ? \"row\" : \"column\"} alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"caption\">{m.format(dateFormat)}</Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"caption\">{m.format('HH:mm:ss')}</Typography>\n        </Grid>\n      </Grid>\n    )\n  }\n\n  return (\n    <Box p={2}>\n      <Grid container spacing={1} justify=\"space-between\" direction={smUp ? 'row' : 'column'}>\n        <Grid item>\n          <Typography gutterBottom variant=\"h5\">Messages</Typography>\n        </Grid>\n        {!!onClearMsgs &&\n          <Grid item xs sm='auto'>\n            <Button fullWidth={!smUp} variant=\"contained\" onClick={onClearMsgs}>\n              Clear messages\n            </Button>\n          </Grid>\n        }\n      </Grid>\n      <Grid container direction=\"column\">\n        <Box p={1}>\n          {msgs.map(renderMsg)}\n        </Box>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default MsgList;\n","import React, { FC, Fragment, useState } from 'react';\nimport { Box, Button, Dialog, Typography } from '@material-ui/core';\nimport MessageIcon from '@material-ui/icons/Message';\n\n\nimport Msg from '../Msg';\nimport MsgList from './MsgList';\n\nexport interface MsgDialogProps {\n  msgs: Msg[];\n  onClearMsgs?: () => void;\n  dateFormat: string;\n}\n\nconst MsgDialog: FC<MsgDialogProps> = ({ msgs, onClearMsgs, dateFormat }) => {\n\n  const [open,setOpen] = useState(false);\n\n  function handleClearMsgs(){\n    setOpen(false);\n    if(onClearMsgs){\n      onClearMsgs();\n    }\n  }\n\n  return (\n    <Fragment>\n      {!!msgs.length &&\n        <Button color=\"inherit\" onClick={() => setOpen(true)}>\n          <Box pr={1}>\n            <Typography variant=\"caption\">{msgs.length}</Typography>\n          </Box>\n          <MessageIcon />\n        </Button>\n      }\n      <Dialog open={open} onClose={() => setOpen(false)}>\n        <MsgList msgs={msgs} onClearMsgs={handleClearMsgs} dateFormat={dateFormat} />\n      </Dialog>\n    </Fragment>\n  );\n}\n\nexport default MsgDialog;\n","\n\nexport function toMoneyS(value?: number){\n  if((!value) && (value !== 0)){\n    return '';\n  }\n  var cents = (Math.abs(value) % 100).toString().padStart(2, '0');\n  var dollars = Math.trunc(value / 100).toString();\n  return dollars + '.' + cents;\n}\n\nexport function fromMoneyS(value?: string){\n  return (!value) ? undefined : Math.round(Number.parseFloat(value) * 100);\n}\n","import React, { FC } from 'react';\nimport { Box } from '@material-ui/core';\n\nimport { toMoneyS } from './service';\n\nexport interface IMoneyProps {\n  value: number;\n  fontWeight?: number;\n}\n\nconst Money: FC<IMoneyProps> = ({ value, fontWeight }) => {\n  return <Box textAlign=\"right\" fontWeight={fontWeight}>{toMoneyS(value)}</Box>\n}\n\nexport default Money;\n","\nenum TransactionCode {\n  W = 'W',\n  C = 'C',\n  D = 'D',\n  CE = 'CE',\n  I = 'I',\n  E = 'E',\n  S = 'S',\n  B = 'B',\n  // Custom codes\n  CBT = 'CBT',\n  CUC = 'CUC',\n  CUW = 'CUW',\n  CUO = 'CUO',\n  CCE = 'CCE',\n}\n\nexport default TransactionCode;\n\nexport function describeTransactionCode(code: TransactionCode){\n  switch(code){\n    case TransactionCode.W:\n      return 'Contributions for the worldwide work';\n    case TransactionCode.C:\n      return 'Contributions for the local congregation collected from boxes';\n    case TransactionCode.D:\n      return 'Deposit to primary account';\n    case TransactionCode.CE:\n      return 'Contributions for the local congregation received by electronic transfer';\n    case TransactionCode.I:\n      return 'Interest from bank account';\n    case TransactionCode.E:\n      return 'Congregation expenditure';\n    case TransactionCode.CCE:\n      return 'Special Congregation expenditure'\n    case TransactionCode.S:\n      return 'Funds received (For the Branch) for a special purpose';\n    case TransactionCode.B:\n      return 'Contributions for worldwide construction work from boxes';\n    case TransactionCode.CBT:\n      return 'Transfer to Branch';\n    case TransactionCode.CUC:\n      return 'Other - Congregation';\n    case TransactionCode.CUW:\n      return 'Other - Worldwide Work'\n    case TransactionCode.CUO:\n      return 'Other';\n    default:\n      throw new Error('UnknownCode:'+code);\n  }\n}\n\n\nexport function describeTransactionCodeShort(code: TransactionCode){\n  switch(code){\n    case TransactionCode.W:\n      return 'Contrib - WW';\n    case TransactionCode.C:\n      return 'Contrib - Cong';\n    case TransactionCode.D:\n      return 'Deposit';\n    case TransactionCode.CE:\n      return 'Contrib - Electronic';\n    case TransactionCode.I:\n      return 'Interest';\n    case TransactionCode.CBT:\n      return 'Transfer to Branch';\n    case TransactionCode.B:\n      return 'Contrib - Construction'\n    case TransactionCode.E:\n    case TransactionCode.CCE:\n    case TransactionCode.S:\n    case TransactionCode.CUC:\n    case TransactionCode.CUW:\n    case TransactionCode.CUO:\n      return '';\n    default:\n      throw new Error('UnknownCode:'+code);\n  }\n}\n\nexport function isLocalCongregation(code: TransactionCode){\n  switch(code){\n    case TransactionCode.W:\n    case TransactionCode.S:\n    case TransactionCode.CUW:\n    case TransactionCode.B:\n      return false;\n    case TransactionCode.C:\n    case TransactionCode.CE:\n    case TransactionCode.I:\n    case TransactionCode.E:\n    case TransactionCode.CCE:\n    case TransactionCode.CUC:\n      return true;\n    case TransactionCode.D:\n    case TransactionCode.CUO:\n    case TransactionCode.CBT:\n      return null;\n    default:\n      throw new Error('UnknownCode:'+code);\n  }\n}\n","\nenum TransactionBreakdownCode{\n  WW_BOX = 'WW_BOX',\n  WW_RESOLUTION = 'WW_RESOLUTION',\n  KHAHC = 'KHAHC',\n  GAA = 'GAA',\n  COAA = 'COAA',\n  OTHER = 'OTHER',\n}\n\nexport default TransactionBreakdownCode;\n\nexport function describeTransactionBreakdownCode(code: TransactionBreakdownCode){\n  switch(code){\n    case TransactionBreakdownCode.WW_BOX:\n      return 'Worldwide Work (From Contribution Box)';\n    case TransactionBreakdownCode.WW_RESOLUTION:\n      return 'Worldwide Work (Resolution)';\n    case TransactionBreakdownCode.KHAHC:\n      return 'Kingdom Hall and Assembly Hall Construction Worldwide (Resolution)';\n    case TransactionBreakdownCode.GAA:\n      return 'Global Assistance Arrangement (Resolution)';\n    case TransactionBreakdownCode.COAA:\n      return 'Circuit Overseer Assistance Arrangement (Resolution)';\n    case TransactionBreakdownCode.OTHER:\n      return 'Other';\n    default:\n      throw new Error('UnknownCode:'+code);\n  }\n}\n\nexport function describeTransactionBreakdownCodeShort(code: TransactionBreakdownCode){\n  switch(code){\n    case TransactionBreakdownCode.WW_BOX:\n      return 'WW (Box)';\n    case TransactionBreakdownCode.WW_RESOLUTION:\n      return 'WW (Resolution)';\n    case TransactionBreakdownCode.KHAHC:\n      return 'KHAHC (Resolution)';\n    case TransactionBreakdownCode.GAA:\n      return 'GAA (Resolution)';\n    case TransactionBreakdownCode.COAA:\n      return 'COAA (Resolution)';\n    case TransactionBreakdownCode.OTHER:\n      return 'Other';\n    default:\n      throw new Error('UnknownCode:'+code);\n  }\n}\n","import { number, object, string } from 'yup';\nimport TransactionBreakdownCode from '../types/TransactionBreakdownCode';\n\nexport default function transactionBreakdownSchema(){\n  return object().shape({\n    id: number().positive(),\n    code: string().oneOf(Object.keys(TransactionBreakdownCode)),\n    description: string(),\n    amt: number().integer()\n  });\n}\n","import moment from 'moment';\nimport { number, string } from 'yup';\nimport { DATE_FORMAT } from './date';\n\nexport interface YupContext{\n  path: any;\n  createError: any;\n}\n\nexport const dateStr = string().test('valid-date', 'Invalid Date',\n  function(this: YupContext, str?: string) {\n    return !(str) || moment(str, DATE_FORMAT).format(DATE_FORMAT) === str;\n  });\n\n\nexport const positiveNum = number().integer().min(0);\n","import { array, number, NumberSchema, object, string, StringSchema } from 'yup';\nimport Transaction from '../types/Transaction';\nimport TransactionBreakdown from '../types/TransactionBreakdown';\nimport TransactionCode from '../types/TransactionCode';\nimport transactionBreakdownSchema from './transactionBreakdownSchema';\nimport { YupContext, dateStr } from '../../utils/schemas';\n\nexport default function transactionSchema(){\n  return object().shape({\n    id: number().integer(),\n    date: dateStr.required(),\n    receipts_amt: number().integer().required()\n      .when(['code', 'cash', 'cheques'],\n        (code: TransactionCode|undefined, cash: number|undefined, cheques: number|undefined, schema: NumberSchema) => {\n          switch(code as unknown){\n            case TransactionCode.C:\n            case TransactionCode.W:\n              return schema.min(0).oneOf([(cash as number)+(cheques as number)], 'Receipts should match sum of cash and cheques');\n            case TransactionCode.D:\n              return schema.max(0, 'Deposits should be debited from receipts (Receipts should be negative)');\n            case TransactionCode.CE:\n            case TransactionCode.I:\n              return schema.oneOf([0]);\n            default:\n              return schema;\n          }\n        }\n      ),\n    primary_amt: number().integer().required()\n      .when(['code', 'receipts_amt'],\n        (code: TransactionCode|undefined, receipts_amt: number, schema: NumberSchema) => {\n          switch(code as unknown){\n            case TransactionCode.C:\n            case TransactionCode.W:\n              return schema.oneOf([0], 'Contributions should be applied as receipts. A separate deposit item should be created for crediting the primary account.');\n            case TransactionCode.D:\n              return schema.min(0).oneOf([-receipts_amt], 'Receipts and Primary amounts should match for Deposits');\n            case TransactionCode.CE:\n            case TransactionCode.I:\n              return schema.min(0, 'Primary amount should be positive for Electronic Contributions / Interest Payments');\n            default:\n              return schema;\n          }\n        }\n      ),\n    other_amt: number().integer().required(),\n    code: string().oneOf(Object.keys(TransactionCode)),\n    description: string().required(),\n    apply_on_date: dateStr.when(['date'],\n      (date: string, schema: StringSchema) => {\n        return schema.test(\n          'apply_on_date_gt_date',\n          'Applied date should be the same as or later than date',\n          (apply_on_date: string) => {\n            return !apply_on_date || apply_on_date >= date;\n          })\n      }\n    ),\n    breakdown: array().of(transactionBreakdownSchema())\n  }).test('breakdown_total_match',\n    'Breakdown total should match one of the transaction amounts',\n    function(this: YupContext, transaction: Transaction) {\n      const { breakdown } = transaction;\n      if(!breakdown){\n        return true;\n      }\n      const total = breakdown.reduce((sum: number|null, item: TransactionBreakdown) => {\n        if(sum == null || item.amt == null){\n          return null;\n        }\n        return sum + item.amt;\n      }, 0);\n      return total == null ||\n        total === Math.abs(transaction.receipts_amt) ||\n        total === Math.abs(transaction.primary_amt) ||\n        total === Math.abs(transaction.other_amt);\n    }\n  );\n}\n","import Dexie from 'dexie';\nimport Transaction from './types/Transaction';\nimport TransactionListProps from './types/TransactionListProps';\nimport transactionSchema from './schemas/transactionSchema';\nimport db from '../utils/db';\n\ndb.version(1).stores({\n  transactions: '++id,date,apply_on_date'\n})\n\nfunction table(){\n  return db.table<Transaction>('transactions');\n}\n\nexport function create(transaction: Transaction){\n  return new Promise<Transaction>((resolve, reject) => {\n    transactionSchema().validate(transaction).then(() => {\n      table().add(transaction as Transaction).then((id) => {\n        resolve({ ...transaction, id });\n      }, reject);\n    }, reject);\n  });\n}\n\nexport function read(id: number){\n  return table().get(id);\n}\n\nexport function update(transaction: Transaction){\n  return new Promise<Transaction>((resolve, reject) => {\n    transactionSchema().validate(transaction).then(() => {\n      table().update(transaction.id, transaction).then(() => {\n        resolve(transaction);\n      }, reject);\n    }, reject);\n  });\n}\n\nexport function destroy(id: number){\n  return table().delete(id);\n}\n\nexport function list(props?: TransactionListProps){\n  const { date_min, date_max, apply_on_date_min, apply_on_date_max } = props || {};\n  let collection: ColXN = range(null, 'date', date_min, date_max);\n  collection = range(collection, 'apply_on_date', apply_on_date_min, apply_on_date_max);\n  if(collection){\n    return collection.sortBy('date');\n  }\n  return table().orderBy('date').toArray();\n}\n\ntype IndexedAttrs = 'date'|'apply_on_date';\ntype ColXN = Dexie.Collection<Transaction, number>|null;\n\nfunction range(collection: ColXN, attr: IndexedAttrs, min?: string, max?: string){\n  if(max && min){\n    return between(collection, attr, min, max);\n  }else if(min){\n    return aboveOrEqual(collection, attr, min);\n  }else if(max){\n    return below(collection, attr, max);\n  }else{\n    return collection;\n  }\n}\n\nfunction between(collection: ColXN, attr: IndexedAttrs, min: string, max: string){\n  if(collection){\n    return collection.filter((transaction) => {\n      const val = transaction[attr];\n      return (!!val && val >= min && val < max);\n    });\n  }\n  return table().where(attr).between(min, max);\n}\n\nfunction aboveOrEqual(collection: ColXN, attr: IndexedAttrs, min: string){\n    if(collection){\n      return collection.filter((transaction) => {\n        const val = transaction[attr];\n        return (!val || val >= min);\n      });\n    }\n    return table().where(attr).aboveOrEqual(min);\n}\n\nfunction below(collection: ColXN, attr: IndexedAttrs, max: string){\n    if(collection){\n      return collection.filter((transaction) => {\n        const val = transaction[attr];\n        return (!!val && val < max);\n      });\n    }\n    return table().where(attr).below(max);\n}\n","import MsgType from './msgs/MsgType';\nimport { addMsg } from './msgs/service';\n\nfunction getMsg(err: any): string {\n  if(err.msg){\n    return getMsg(err.msg);\n  }else if(err.message){\n    return getMsg(err.message);\n  }else if(err.error){\n    return getMsg(err.error);\n  }else{\n    return err.toString();\n  }\n};\n\nexport default function(err: any) {\n  addMsg(getMsg(err), MsgType.Error);\n}\n","import DateBalance from './types/DateBalance';\nimport Transaction from './types/Transaction';\nimport TransactionCode from './types/TransactionCode';\nimport TransactionListProps from './types/TransactionListProps';\nimport TransactionSet from './types/TransactionSet';\n\nimport * as dao from './transactionDAO';\n\nimport { todayStr } from '../utils/date';\nimport { addMsg } from '../utils/msgs/service';\nimport addErr from '../utils/Err';\n\nexport function create(transaction: Transaction){\n  return new Promise((resolve, reject) => {\n    dao.create(transaction).then((transaction) => {\n      addMsg('Transaction Created');\n      resolve(transaction);\n    }, (err: any) => {\n      addErr(err);\n      reject(err);\n    });\n  })\n}\n\nexport function read(id: number){\n  return dao.read(id);\n}\n\nexport function update(transaction: Transaction){\n  return new Promise((resolve, reject) => {\n    dao.update(transaction).then((transaction) => {\n      addMsg('Transaction Updated');\n      resolve(transaction);\n    }, (err: any) => {\n      addErr(err);\n      reject(err);\n    });\n  });\n}\n\nexport function destroy(id: number){\n  return new Promise((resolve, reject) => {\n    dao.destroy(id).then(() => {\n      addMsg('Transaction Destroyed');\n      resolve();\n    }, (err: any) => {\n      addErr(err);\n      reject(err);\n    });\n  });\n}\n\nexport function list(props?: TransactionListProps){\n  return dao.list(props);\n}\n\nexport function newInstance(\n  description: string,\n  date?: string,\n  code = TransactionCode.C\n): Transaction{\n  return {\n    date: date || todayStr(),\n    apply_on_date: date || todayStr(),\n    description,\n    code,\n    receipts_amt: 0,\n    primary_amt: 0,\n    other_amt: 0,\n  }\n}\n\nexport function loadDateBalance(date: string){\n  return new Promise<DateBalance>((resolve, reject) => {\n    dao.list({ date_max: date }).then((transactions) => {\n      resolve(buildBalance(transactions, date));\n    }, reject);\n  });\n}\n\nexport function loadTransactionSet(date_min: string, date_max: string){\n  return new Promise<TransactionSet>((resolve, reject) => {\n    loadDateBalance(date_min).then((start) => {\n      list({ date_min, date_max }).then((transactions) => {\n        resolve({ start, transactions, date_max });\n      }, reject);\n    }, reject);\n  });\n}\n\nfunction buildBalance(transactions: Transaction[], date: string): DateBalance{\n  return transactions.reduce((dateBalance, transaction) => {\n    dateBalance.receipts += transaction.receipts_amt;\n    dateBalance.primary += transaction.primary_amt;\n    dateBalance.other += transaction.other_amt;\n    if(transaction.apply_on_date && date > transaction.apply_on_date){\n      dateBalance.applied_receipts += transaction.receipts_amt;\n      dateBalance.applied_primary += transaction.primary_amt;\n      dateBalance.applied_other += transaction.other_amt;\n    }\n    return dateBalance;\n  }, {\n    date,\n    receipts: 0,\n    primary: 0,\n    other: 0,\n    applied_receipts: 0,\n    applied_primary: 0,\n    applied_other: 0,\n  });\n}\n\nexport function isPending(transaction: Transaction, date: string){\n  return (!transaction.apply_on_date) || transaction.apply_on_date >= date\n}\n","import { number, object, string } from 'yup';\nimport TransactionCode from '../transactions/types/TransactionCode';\n\nexport default function contributionBoxSchema(){\n  return object().shape({\n    id: number().integer().positive(),\n    title: string().required(),\n    code: string().oneOf(Object.keys(TransactionCode)),\n  })\n};\n","import ContributionBox from './ContributionBox';\nimport contributionBoxSchema from './contributionBoxSchema';\nimport db from '../utils/db';\nimport TransactionCode, { describeTransactionCodeShort } from '../transactions/types/TransactionCode';\n\ndb.version(1).stores({\n  contribution_boxes: '++id,title'\n})\n\ndb.on(\"populate\", () => {\n  [TransactionCode.W, TransactionCode.C, TransactionCode.B].forEach((code) => {\n    (db as any).contribution_boxes.add({\n      code,\n      title: describeTransactionCodeShort(code),\n    });\n  });\n});\n\nfunction table(){\n  return db.table<ContributionBox>('contribution_boxes');\n}\n\nexport function create(box: ContributionBox){\n  return new Promise<ContributionBox>((resolve, reject) => {\n    contributionBoxSchema().validate(box).then(() => {\n      table().add(box as ContributionBox).then((id) => {\n        resolve({ ...box, id });\n      }, reject);\n    }, reject);\n  });\n}\n\nexport function read(id: number){\n  return table().get(id);\n}\n\nexport function update(box: ContributionBox){\n  return new Promise<ContributionBox>((resolve, reject) => {\n    contributionBoxSchema().validate(box).then(() => {\n      table().update(box.id, box).then(() => {\n        resolve(box);\n      }, reject);\n    }, reject);\n  });\n}\n\nexport function destroy(id: number){\n  return table().delete(id);\n}\n\nexport function list(){\n  return table().toArray();\n}\n\nexport function restore(boxes: ContributionBox[]){\n  return new Promise((resolve, reject) => {\n    Promise.all(boxes.map(box => contributionBoxSchema().validate(box))).then(() => {\n      list().then((oldBoxes) => {\n        table().bulkDelete(oldBoxes.map(box => box.id as number)).then(()=> {\n          table().bulkAdd(boxes).then(resolve, reject);\n        }, reject);\n      }, reject);\n    }, reject);\n  });\n}\n","\nimport ContributionBox from './ContributionBox';\n\nimport * as dao from './contributionBoxDAO';\n\nimport { addMsg } from '../utils/msgs/service';\nimport addErr from '../utils/Err';\nimport TransactionCode, { describeTransactionCodeShort } from '../transactions/types/TransactionCode';\n\nexport function newInstance(): ContributionBox{\n  return {\n    code: TransactionCode.W,\n    title: describeTransactionCodeShort(TransactionCode.W),\n  }\n}\n\nexport function create(contributionBox: ContributionBox){\n  return new Promise((resolve, reject) => {\n    dao.create(contributionBox).then((contributionBox) => {\n      addMsg('Contribution Box Created');\n      resolve(contributionBox);\n    }, (err: any) => {\n      addErr(err);\n      reject(err);\n    });\n  })\n}\n\nexport function read(id: number){\n  return dao.read(id);\n}\n\nexport function update(contributionBox: ContributionBox){\n  return new Promise((resolve, reject) => {\n    dao.update(contributionBox).then((contributionBox) => {\n      addMsg('Contribution Box Updated');\n      resolve(contributionBox);\n    }, (err: any) => {\n      addErr(err);\n      reject(err);\n    });\n  });\n}\n\nexport function destroy(id: number){\n  return new Promise((resolve, reject) => {\n    dao.destroy(id).then(() => {\n      addMsg('Contribution Box Destroyed');\n      resolve();\n    }, (err: any) => {\n      addErr(err);\n      reject(err);\n    });\n  });\n}\n\nexport function list(){\n  return dao.list();\n}\n","\n// Uggh - I really need this library. There is no good alternative, but it uses\n// Workers and seems to be completely incompatible with React Typescript / Modules.\n// Best I can think of is to wrap it to hide / isolate the weird / ugly to one place.\n\n// See https://phihag.github.io/pdfform.js/docs/demo.html for setup\n\nlet libraryReady: Promise<any>|null = null;\n\nfunction whenLibraryReady(){\n  if(!libraryReady){\n    libraryReady = new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = '/pdfform.pdf_js.dist.js';\n      script.async = true;\n      script.onload = resolve;\n      script.onerror = reject;\n      document.body.appendChild(script);\n    });\n  }\n  return libraryReady;\n}\n\n\nexport async function transformPdf(url: string, fieldValues: any){\n  await whenLibraryReady();\n  const response = await fetch(url);\n  const arrayBuffer = await response.arrayBuffer();\n  var transformedBuffer = (window as any).pdfform().transform(arrayBuffer, fieldValues);\n  return transformedBuffer;\n}\n\nexport async function downloadUrlForTransformedPdf(url: string, fieldValues: any){\n  const transformedBuffer = await transformPdf(url, fieldValues);\n  const blob = new Blob([transformedBuffer], { type: 'application/pdf' });\n  const dataUrl = URL.createObjectURL(blob);\n  return dataUrl;\n}\n\nexport async function fillAndDownloadPdf(url: string, fieldValues: any){\n  const downloadUrl = await downloadUrlForTransformedPdf(url, fieldValues);\n  const a = document.createElement('a');\n  a.target = '_blank'\n  a.href = downloadUrl;\n  a.style.display = 'none';\n  document.body.appendChild(a);\n  a.click();\n  a.remove();\n  window.setTimeout(() => URL.revokeObjectURL(downloadUrl), 5000);\n};\n","import moment from 'moment';\nimport { DATE_FORMAT } from '../utils/date';\nimport { currentDateStr } from '../settings/SettingsService';\nimport Settings from '../settings/Settings';\nimport DateBalance from './types/DateBalance';\nimport Transaction from './types/Transaction';\nimport TransactionCode from './types/TransactionCode';\nimport TransactionSet from './types/TransactionSet';\nimport { toMoneyS } from '../utils/money/service';\nimport { fillAndDownloadPdf } from '../utils/pdf';\nimport { isPending } from './transactionService';\n\ninterface S26Context{\n  rowNum: number;\n  receiptsIn: number;\n  receiptsOut: number;\n  primaryIn: number;\n  primaryOut: number;\n  otherIn: number;\n  otherOut: number;\n  fieldValues: any;\n  notYetAppliedReceiptsIn: number;\n  notYetAppliedReceiptsOut: number;\n  notYetAppliedPrimaryIn: number;\n  notYetAppliedPrimaryOut: number;\n  notYetAppliedOtherIn: number;\n  notYetAppliedOtherOut: number;\n}\n\nexport async function fillAndDownloadS26(transactionSet: TransactionSet, end: DateBalance, settings: Settings){\n  const { start, transactions } = transactionSet;\n  const date = moment(start.date, DATE_FORMAT);\n\n  const context = {\n    rowNum: 0,\n    receiptsIn: 0,\n    receiptsOut: 0,\n    primaryIn: 0,\n    primaryOut: 0,\n    otherIn: 0,\n    otherOut: 0,\n    fieldValues: {\n      '900_1_Text_C': [settings.congregation_name],\n      '900_2_Text_C': [settings.city],\n      '900_3_Text_C': [settings.province_or_state],\n      '900_4_Text_C': [date.format('MMMM')],\n      '900_5_Text_C': [date.year()],\n      '900_6_Text_C': [settings.other_account_description],\n    }\n  } as S26Context\n\n  transactions.forEach((transaction) =>\n    processTransaction(transaction, context)\n  );\n\n  const { fieldValues } = context;\n\n  fillPrimaryReconcilliation(fieldValues, context, transactionSet, end, settings);\n  fillSummary(fieldValues, settings, transactionSet.start, end, context);\n  fillOtherReconcilliation(fieldValues, settings, transactionSet, end);\n\n  await fillAndDownloadPdf('/pdf/S-26-E.pdf', fieldValues);\n}\n\nfunction buildPendingPrimaryDeposits(transactionSet: TransactionSet){\n  return transactionSet.transactions.reduce((sum, transaction) => {\n    const applicable = isPending(transaction, transactionSet.date_max) && (transaction.primary_amt > 0);\n    const diff = applicable ? transaction.primary_amt : 0;\n    return sum + diff;\n  }, 0);\n}\n\nfunction buildPendingPrimaryCharges(transactionSet: TransactionSet){\n  return transactionSet.transactions.reduce((sum, transaction) => {\n    const applicable = isPending(transaction, transactionSet.date_max) && (transaction.primary_amt < 0);\n    const diff = applicable ? transaction.primary_amt : 0;\n    return sum - diff;\n  }, 0);\n}\n\n\nfunction buildPendingOtherDeposits(transactionSet: TransactionSet){\n  return transactionSet.transactions.reduce((sum, transaction) => {\n    const applicable = isPending(transaction, transactionSet.date_max) && (transaction.other_amt > 0);\n    const diff = applicable ? transaction.other_amt : 0;\n    return sum + diff;\n  }, 0);\n}\n\nfunction buildPendingOtherCharges(transactionSet: TransactionSet){\n  return transactionSet.transactions.reduce((sum, transaction) => {\n    const applicable = isPending(transaction, transactionSet.date_max) && (transaction.other_amt < 0);\n    const diff = applicable ? transaction.other_amt : 0;\n    return sum - diff;\n  }, 0);\n}\n\n\nfunction processTransaction(transaction: Transaction, context: S26Context){\n  fillFormFromTransaction(transaction, context);\n  updateContext(transaction, context);\n}\n\nfunction getCodeStr(code: TransactionCode){\n  if(code === TransactionCode.CCE){\n    return TransactionCode.E;\n  }\n  return (code.length < 3) ? code : '';\n}\n\nfunction fillFormFromTransaction(transaction: Transaction, context: S26Context){\n\n  const { rowNum, fieldValues } = context;\n  const { date, description, code, receipts_amt, primary_amt, other_amt, breakdown} = transaction;\n\n  fieldValues[`900_${7+rowNum}_Text_C`] = [moment(date, DATE_FORMAT).date()];\n  fieldValues[`900_${59+rowNum}_Text`] = [description];\n  fieldValues[`900_${111+rowNum}_Text_C`] = [getCodeStr(code)];\n\n  if(receipts_amt > 0){\n    fieldValues[`901_${1+rowNum}_S26Value`] = [toMoneyS(receipts_amt)];\n  }\n  if(receipts_amt < 0){\n    fieldValues[`901_${54+rowNum}_S26Value`] = [toMoneyS(-receipts_amt)];\n  }\n  if(primary_amt > 0){\n    fieldValues[`902_${1+rowNum}_S26Value`] = [toMoneyS(primary_amt)];\n  }\n  if(primary_amt < 0){\n    fieldValues[`902_${54+rowNum}_S26Value`] = [toMoneyS(-primary_amt)];\n  }\n  if(other_amt > 0){\n    fieldValues[`903_${1+rowNum}_S26Value`] = [toMoneyS(other_amt)];\n  }\n  if(other_amt < 0){\n    fieldValues[`903_${54+rowNum}_S26Value`] = [toMoneyS(-other_amt)];\n  }\n\n  (breakdown || []).forEach((breakdown, index) => {\n      fieldValues[`900_${59+rowNum+index+1}_Text`] = [`${breakdown.description} ${breakdown.amt ? `[${toMoneyS(breakdown.amt)}]` : ''}`];\n  })\n\n}\n\nfunction updateContext(transaction: Transaction, context: S26Context){\n  const { breakdown, receipts_amt, primary_amt, other_amt} = transaction;\n  if(receipts_amt > 0)\n    context.receiptsIn += receipts_amt;\n  else{\n    context.receiptsOut -= receipts_amt;\n  }\n  if(primary_amt > 0)\n    context.primaryIn += primary_amt;\n  else{\n    context.primaryOut -= primary_amt;\n  }\n  if(other_amt > 0)\n    context.otherIn += other_amt;\n  else{\n    context.otherOut -= other_amt;\n  }\n  context.rowNum++;\n  if(breakdown){\n    context.rowNum += breakdown.length;\n  }\n}\n\nfunction fillOtherReconcilliation(fieldValues: any, settings: Settings, transactionSet: TransactionSet, end: DateBalance){\n\n  const pendingOtherCharges = buildPendingOtherCharges(transactionSet);\n  const pendingOtherDeposits = buildPendingOtherDeposits(transactionSet);\n\n  fieldValues['904_43_Text_C'] = [currentDateStr(settings)];\n  fieldValues['904_44_S26Amount'] = [toMoneyS(end.applied_other)];\n  fieldValues['904_45_S26Amount'] = [toMoneyS(pendingOtherDeposits)];\n  //fieldValues['904_46_S26Amount'] = [toMoneyS(0)]; //Not sure why this exists? \"Any bank charges not recorded on Accounts Sheet\" - why would they not be recorded? Just record them...\n  fieldValues['904_47_S26TotalAmount'] = [toMoneyS(end.applied_other + pendingOtherDeposits - pendingOtherCharges)];\n  let offset = 0;\n  transactionSet.transactions.forEach((transaction) => {\n    if(isPending(transaction, end.date) && transaction.other_amt < 0){\n      fieldValues[`904_${offset+48}_Text`] = [transaction.description];\n      fieldValues[`904_${offset+49}_S26Amount`] = [toMoneyS(-transaction.other_amt)];\n      offset += 2;\n    }\n  });\n  fieldValues['904_54_S26TotalAmount'] = [toMoneyS(pendingOtherCharges)];\n  //fieldValues['904_55_S26Amount'] = [toMoneyS(0)]; //Not sure why this exists? \"Any bank interest not recorded on Accounts Sheet\" - why would this not be recorded? Just record them...\n  fieldValues['904_56_S26TotalAmount'] = [toMoneyS(end.other)];\n}\n\nfunction fillSummary(fieldValues: any, settings: Settings, start: DateBalance, end: DateBalance, context: S26Context){\n  fieldValues['904_28_Text_C'] = [moment().format(settings.formatting.month_format)];\n\n  fieldValues['904_29_S26Amount'] = [toMoneyS(start.receipts)];\n  fieldValues['904_30_S26TotalAmount'] = [toMoneyS(context.receiptsIn)];\n  fieldValues['904_31_S26TotalAmount'] = [toMoneyS(context.receiptsOut)];\n  fieldValues['904_32_S26TotalAmount'] = [toMoneyS(end.receipts)];\n\n  fieldValues['904_33_S26Amount'] = [toMoneyS(start.primary)];\n  fieldValues['904_34_S26TotalAmount'] = [toMoneyS(context.primaryIn)];\n  fieldValues['904_35_S26TotalAmount'] = [toMoneyS(context.primaryOut)];\n  fieldValues['904_36_S26TotalAmount'] = [toMoneyS(end.primary)];\n\n  fieldValues['904_37_Text'] = [settings.other_account_description]\n  fieldValues['904_38_S26Amount'] = [toMoneyS(start.other)];\n  fieldValues['904_39_S26TotalAmount'] = [toMoneyS(context.otherIn)];\n  fieldValues['904_40_S26TotalAmount'] = [toMoneyS(context.otherOut)];\n  fieldValues['904_41_S26TotalAmount'] = [toMoneyS(end.other)];\n\n  fieldValues['904_42_S26TotalAmount'] = [toMoneyS(end.receipts + end.primary + end.other)];\n}\n\nfunction fillPrimaryReconcilliation(fieldValues: any, context: S26Context, transactionSet: TransactionSet,\n  end: DateBalance, settings: Settings){\n\n  fieldValues['904_1_Text_C'] = [currentDateStr(settings)];\n  fieldValues['901_53_S26TotalValue'] = [toMoneyS(context.receiptsIn)];\n  fieldValues['901_106_S26TotalValue'] = [toMoneyS(context.receiptsOut)];\n  fieldValues['902_53_S26TotalValue'] = [toMoneyS(context.primaryIn)];\n  fieldValues['902_106_S26TotalValue'] = [toMoneyS(context.primaryOut)];\n  fieldValues['903_53_S26TotalValue'] = [toMoneyS(context.otherIn)];\n  fieldValues['903_106_S26TotalValue'] = [toMoneyS(context.otherOut)];\n\n  if(settings.cash_box){\n    fillCashBox(fieldValues, transactionSet, end);\n  }else{\n    fillBankAccount(fieldValues, transactionSet, end);\n  }\n}\n\nfunction fillBankAccount(fieldValues: any, transactionSet: TransactionSet, end: DateBalance){\n  const pendingPrimaryCharges = buildPendingPrimaryCharges(transactionSet);\n  const pendingPrimaryDeposits = buildPendingPrimaryDeposits(transactionSet);\n  fieldValues['904_2_S26Amount'] = [toMoneyS(end.applied_primary)];\n  fieldValues['904_3_S26Amount'] = [toMoneyS(pendingPrimaryDeposits)];\n  //fieldValues['904_4_S26Amount'] = [toMoneyS(0)]; //Not sure why this exists? \"Any bank charges not recorded on Accounts Sheet\" - why would they not be recorded? Just record them...\n  fieldValues['904_5_S26TotalAmount'] = [toMoneyS(pendingPrimaryDeposits)];\n  let offset = 0;\n  transactionSet.transactions.forEach((transaction) => {\n    if(isPending(transaction, end.date) && transaction.primary_amt < 0){\n      fieldValues[`904_${offset+6}_Text`] = [transaction.description];\n      fieldValues[`904_${offset+7}_S26Amount`] = [toMoneyS(-transaction.primary_amt)];\n      offset += 2;\n    }\n  });\n  fieldValues['904_20_S26TotalAmount'] = [toMoneyS(pendingPrimaryCharges)];\n  //fieldValues['904_21_S26Amount'] = [toMoneyS(0)]; //Not sure why this exists? \"Any bank interest not recorded on Accounts Sheet\" - why would this not be recorded? Just record them...\n  //fieldValues['904_22_S26Amount'] = [toMoneyS(0)];// All electronic contributions not recorded on Accounts Sheet:\n  fieldValues['904_23_S26TotalAmount'] = [toMoneyS(end.primary)];\n}\n\nfunction fillCashBox(fieldValues: any, transactionSet: TransactionSet, end: DateBalance){\n  const pendingPrimaryDeposits = buildPendingPrimaryDeposits(transactionSet);\n  fieldValues['904_24_S26Amount'] = [toMoneyS(end.applied_primary)];\n  fieldValues['904_25_S26Amount'] = [toMoneyS(pendingPrimaryDeposits)];\n  fieldValues['904_26_S26Amount'] = [toMoneyS(0)]; // Not sure why this exists? \"Completed payments not yet recorded on Accounts Sheet:\" - why would they not be recorded? Just record them...\n  fieldValues['904_27_S26Amount'] = [toMoneyS(end.primary)];\n}\n","import moment from 'moment';\nimport { DATE_FORMAT } from '../utils/date';\nimport Settings from '../settings/Settings';\nimport TransactionBreakdownCode from './types/TransactionBreakdownCode';\nimport TransactionCode, { isLocalCongregation } from './types/TransactionCode';\nimport TransactionSet from './types/TransactionSet';\nimport { toMoneyS } from '../utils/money/service';\nimport { fillAndDownloadPdf } from '../utils/pdf';\n\nexport async function fillAndDownloadS30(transactionSet: TransactionSet, settings: Settings){\n  const fieldValues: any = {}\n\n  fillInHeading(fieldValues, transactionSet, settings);\n  const receipts = fillInReceipts(fieldValues, transactionSet);\n  const disbursements = fillInDisbursements(fieldValues, transactionSet);\n  fillInTotals(fieldValues, transactionSet, receipts, disbursements, settings);\n  fillInSummary(fieldValues, transactionSet, settings);\n\n  await fillAndDownloadPdf('/pdf/S-30-E.pdf', fieldValues);\n}\n\n\nfunction buildTotalCongregationReceipts(transactionSet: TransactionSet){\n  return transactionSet.transactions.reduce((sum, transaction) => {\n    if(!isLocalCongregation(transaction.code)){\n      return sum;\n    }\n    if(transaction.receipts_amt > 0){\n      sum += transaction.receipts_amt;\n    }\n    if(transaction.primary_amt > 0){\n      sum += transaction.primary_amt;\n    }\n    if(transaction.other_amt > 0){\n      sum += transaction.other_amt;\n    }\n    return sum;\n  }, 0);\n}\n\nfunction buildTotalCongregationDisbursements(transactionSet: TransactionSet){\n  return transactionSet.transactions.reduce((sum, transaction) => {\n    if(isLocalCongregation(transaction.code) !== false){\n      return sum;\n    }\n    if(transaction.receipts_amt > 0){\n      sum += transaction.receipts_amt;\n    }\n    if(transaction.primary_amt > 0){\n      sum += transaction.primary_amt;\n    }\n    if(transaction.other_amt > 0){\n      sum += transaction.other_amt;\n    }\n    return sum;\n  }, 0);\n}\n\nfunction fillInHeading(fieldValues: any, transactionSet: TransactionSet, settings: Settings){\n  const { start } = transactionSet;\n  fieldValues['900_1_Text'] = [settings.congregation_name];\n  fieldValues['900_2_Text'] = [moment(start.date, DATE_FORMAT).format(settings.formatting.month_format)];\n  fieldValues['901_1_S30BOM'] = [toMoneyS(start.receipts + start.primary + start.other)];\n}\n\nfunction fillInReceipts(fieldValues: any, transactionSet: TransactionSet){\n  const { transactions } = transactionSet;\n  const congregationBoxTotal = transactions.reduce((sum, transaction) => {\n    return sum + (transaction.code === TransactionCode.C ? transaction.receipts_amt : 0);\n  }, 0);\n  const congregationElectronicTotal = transactions.reduce((sum, transaction) => {\n    return sum + (transaction.code === TransactionCode.CE ? transaction.primary_amt : 0);\n  }, 0);\n  fieldValues['901_2_S30CongRec'] = [toMoneyS(congregationBoxTotal)];\n  fieldValues['901_3_S30CongRec'] = [toMoneyS(congregationElectronicTotal)];\n\n  //congregation - local receipts not marked C, or CE...\n  let offset = 0;\n  const interest = transactions.reduce((sum, transaction) => sum + ((transaction.code === TransactionCode.I) ? transaction.primary_amt : 0), 0);\n  if(interest){\n    fieldValues[`900_${3+offset}_Text`] = ['Interest'];\n    fieldValues[`901_${4+offset}_S30CongRec`] = [toMoneyS(interest)];\n    offset++;\n  }\n  transactions.forEach((transaction) => {\n    if(transaction.code === TransactionCode.C ||\n      transaction.code === TransactionCode.CE ||\n      transaction.code === TransactionCode.I ||\n      !isLocalCongregation(transaction.code)){\n      return;\n    }\n    let amt = 0\n    if(transaction.receipts_amt > 0){\n      amt += transaction.receipts_amt;\n    }\n    if(transaction.primary_amt > 0){\n      amt += transaction.primary_amt;\n    }\n    if(transaction.other_amt > 0){\n      amt += transaction.other_amt;\n    }\n    if(amt){\n      fieldValues[`900_${3+offset}_Text`] = [transaction.description];\n      fieldValues[`901_${4+offset}_S30CongRec`] = [toMoneyS(amt)];\n      offset++;\n    }\n  });\n  const totalCongregationReceipts = buildTotalCongregationReceipts(transactionSet);\n  fieldValues['901_6_S30TotalCongRec'] = [toMoneyS(totalCongregationReceipts)];\n\n\n  const worldwideBoxTotal = transactions.reduce((sum, transaction) => {\n    return sum + (transaction.code === TransactionCode.W ? transaction.receipts_amt : 0);\n  }, 0);\n  fieldValues['901_7_S30OtherRec'] = [toMoneyS(worldwideBoxTotal)];\n\n  //other - worldwide receipts not marked W...\n  offset = 0;\n  const construction = transactions.reduce((sum, transaction) => sum + ((transaction.code === TransactionCode.B) ? transaction.receipts_amt : 0), 0);\n  if(construction){\n    fieldValues[`900_${5+offset}_Text`] = ['Contrib - Construction'];\n    fieldValues[`901_${8+offset}_S30OtherRec`] = [toMoneyS(construction)];\n    offset++;\n  }\n  transactions.forEach((transaction) => {\n    if(transaction.code === TransactionCode.W ||\n      transaction.code === TransactionCode.B ||\n      isLocalCongregation(transaction.code) !== false){\n      return;\n    }\n    let amt = 0\n    if(transaction.receipts_amt > 0){\n      amt += transaction.receipts_amt;\n    }\n    if(transaction.primary_amt > 0){\n      amt += transaction.primary_amt;\n    }\n    if(transaction.other_amt > 0){\n      amt += transaction.other_amt;\n    }\n    if(amt){\n      fieldValues[`900_${5+offset}_Text`] = [transaction.description];\n      fieldValues[`901_${8+offset}_S30OtherRec`] = [toMoneyS(amt)];\n      offset++;\n    }\n  });\n\n  const totalOtherReceipts = transactions.reduce((sum, transaction) => {\n    if(isLocalCongregation(transaction.code) !== false){\n      return sum;\n    }\n    if(transaction.receipts_amt > 0){\n      sum += transaction.receipts_amt;\n    }\n    if(transaction.primary_amt > 0){\n      sum += transaction.primary_amt;\n    }\n    if(transaction.other_amt > 0){\n      sum += transaction.other_amt;\n    }\n    return sum;\n  }, 0);\n  fieldValues['901_10_S30TotalOtherRec'] = [toMoneyS(totalOtherReceipts)];\n\n  const totalReceipts = totalCongregationReceipts + totalOtherReceipts;\n  fieldValues['901_11_S30TotalRec'] = [toMoneyS(totalReceipts)];\n\n  return totalReceipts;\n}\n\nfunction sumBreakdowns(transactionSet: TransactionSet, code: TransactionBreakdownCode){\n  return transactionSet.transactions.reduce((sum, transaction) => {\n    if(transaction.breakdown){\n      sum += transaction.breakdown.reduce((s, breakdown) => {\n        if(breakdown.amt && breakdown.code === code){\n          s += breakdown.amt;\n        }\n        return s;\n      }, sum);\n    }\n    return sum;\n  }, 0);\n}\n\nfunction fillInDisbursements(fieldValues: any, transactionSet: TransactionSet){\n\n  const khExpenses = transactionSet.transactions.reduce((sum, transaction) =>\n    sum - ((transaction.code === TransactionCode.E) ? transaction.primary_amt : 0),\n  0);\n  fieldValues['901_12_S30CongEx'] = [toMoneyS(khExpenses)];\n\n  const wwResolutionTotal = sumBreakdowns(transactionSet, TransactionBreakdownCode.WW_RESOLUTION);\n  const khahcTotal = sumBreakdowns(transactionSet, TransactionBreakdownCode.KHAHC);\n  const gaaTotal = sumBreakdowns(transactionSet, TransactionBreakdownCode.GAA);\n  const coaaTotal = sumBreakdowns(transactionSet, TransactionBreakdownCode.COAA);\n  fieldValues['901_13_S30CongEx'] = [toMoneyS(wwResolutionTotal)];\n  fieldValues['901_14_S30CongEx'] = [toMoneyS(khahcTotal)];\n  fieldValues['901_15_S30CongEx'] = [toMoneyS(gaaTotal)];\n  fieldValues['901_16_S30CongEx'] = [toMoneyS(coaaTotal)];\n\n  let offset = 0;\n  let otherTotal = 0;\n  transactionSet.transactions.forEach(transaction => {\n    if(transaction.code !== TransactionCode.CCE){\n      return;\n    }\n    fieldValues[`900_${7+offset}_Text`] = [transaction.description];\n    fieldValues[`901_${8+offset}_S30OtherRec`] = [toMoneyS(-transaction.primary_amt)];\n    otherTotal -= transaction.primary_amt;\n    offset++;\n  });\n\n  const totalCong = khExpenses + wwResolutionTotal + khahcTotal + gaaTotal + coaaTotal + otherTotal;\n  fieldValues['901_19_S30TotalCongEx'] = [toMoneyS(totalCong)];\n\n  const wwBoxes = transactionSet.transactions.reduce((sum, transaction) =>\n    sum + ((transaction.code === TransactionCode.W) ? transaction.receipts_amt : 0),\n  0);\n  fieldValues['901_20_S30OtherDis'] = [toMoneyS(wwBoxes)];\n\n  const constBoxes = transactionSet.transactions.reduce((sum, transaction) =>\n    sum + ((transaction.code === TransactionCode.B) ? transaction.receipts_amt : 0),\n  0);\n  fieldValues['901_21_S30OtherDis'] = [toMoneyS(constBoxes)];\n\n  const totalOther = wwBoxes + constBoxes;\n  fieldValues['901_23_S30TotalOtherDis'] = [toMoneyS(totalOther)];\n\n  const totalDisbursements = totalCong + totalOther;\n  fieldValues['901_24_S30TotalDisburse'] = [toMoneyS(totalDisbursements)];\n\n  return totalDisbursements;\n}\n\nfunction fillInTotals(fieldValues: any, transactionSet: TransactionSet, receipts: number, disbursements: number, settings: Settings){\n  const { start } = transactionSet;\n  fieldValues['901_25_S30SurDef'] = [toMoneyS(receipts - disbursements)];\n  const total = start.receipts + start.primary + start.other + receipts - disbursements\n  fieldValues['901_26_S30TotalEOM'] = [toMoneyS(total)];\n  fieldValues['900_13_Text_C'] = [settings.accounts_servant_or_overseer];\n  return total;\n}\n\nfunction fillInSummary(fieldValues: any, transactionSet: TransactionSet, settings: Settings){\n  const totalCongregationReceipts = buildTotalCongregationReceipts(transactionSet);\n  const totalCongregationDisbursements = buildTotalCongregationDisbursements(transactionSet);\n  const { start } = transactionSet;\n  const openingBalance = start.receipts + start.primary + start.other;\n  fieldValues['900_14_Text_C'] = [moment(transactionSet.start.date, DATE_FORMAT).format(settings.formatting.month_format)];\n  fieldValues['901_31_S30TotalDonation'] = [toMoneyS(totalCongregationReceipts)];\n  fieldValues['901_32_S30TotalExpense'] = [toMoneyS(totalCongregationDisbursements)];\n  fieldValues['901_33_S30MonthEnd'] = [toMoneyS(openingBalance + totalCongregationReceipts - totalCongregationDisbursements)];\n\n  const transferredToBranch = transactionSet.transactions.reduce((sum, transaction) => {\n    if(transaction.code === TransactionCode.CBT){\n      return sum - (transaction.receipts_amt + transaction.primary_amt + transaction.other_amt);\n    }\n    return sum;\n  }, 0);\n  fieldValues['901_34_S30ToWWW'] = [toMoneyS(transferredToBranch)];\n\n}\n","import React, { FC, ReactNode } from 'react';\n\nimport { Box, Grid } from '@material-ui/core';\n\ninterface MonthTransactionsRowProps {\n  description?: ReactNode;\n  receipts: ReactNode;\n  primary: ReactNode;\n  other: ReactNode;\n}\n\nconst MonthTransactionsRow: FC<MonthTransactionsRowProps> = ({ description, receipts, primary, other }) => (\n  <Grid container spacing={1} justify=\"flex-end\">\n    {!!description &&\n      <Grid item xs={12} md={6}>\n        <Box textAlign=\"left\">\n          {description}\n        </Box>\n      </Grid>\n    }\n    <Grid item xs={4} md={2}>\n      {receipts}\n    </Grid>\n    <Grid item xs={4} md={2}>\n      {primary}\n    </Grid>\n    <Grid item xs={4} md={2}>\n      {other}\n    </Grid>\n  </Grid>\n);\n\nexport default MonthTransactionsRow\n","import React, { FC } from 'react';\nimport { Box, Grid, Typography } from '@material-ui/core';\n\ninterface AlertProps{\n  msg: string;\n}\n\nconst Alert: FC<AlertProps> = ({ msg }) => {\n  return (\n    <Box p={2}>\n      <Grid container justify=\"center\">\n        <Grid item>\n          <Typography variant=\"h6\">{msg}</Typography>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Alert;\n","import React, { FC, Fragment, MouseEvent, ReactNode, useState } from 'react';\nimport { Box, Button, Dialog, Grid } from '@material-ui/core';\nimport { ButtonProps } from '@material-ui/core/Button';\n\nexport interface ConfirmButtonProps extends ButtonProps{\n  confirmText?: string|ReactNode;\n}\n\nconst ConfirmButton: FC<ConfirmButtonProps> = (props) => {\n\n  const [open, setOpen] = useState(false);\n  const buttonProps = { ...props };\n  delete buttonProps.confirmText;\n\n  function handleClick(event: MouseEvent<HTMLButtonElement>){\n    setOpen(false);\n    if(props.onClick){\n      props.onClick(event);\n    }\n  }\n\n  return (\n    <Fragment>\n      <Button {...buttonProps} onClick={() => setOpen(true)} />\n      <Dialog open={open}>\n        <Box p={2}>\n          <Grid container spacing={2} >\n            <Grid item xs={12}>\n              {props.confirmText}\n            </Grid>\n            <Grid item xs={6}>\n              <Button fullWidth color=\"default\" variant=\"contained\" onClick={() => setOpen(false)}>\n                No\n              </Button>\n            </Grid>\n            <Grid item xs={6}>\n              <Button fullWidth color=\"primary\" variant=\"contained\" onClick={handleClick}>\n                Yes\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Dialog>\n    </Fragment>\n  )\n}\n\nConfirmButton.defaultProps = {\n  confirmText: 'Are You Sure?'\n}\n\nexport default ConfirmButton;\n","import React, { Component, ReactNode } from 'react';\nimport { Collapse } from '@material-ui/core';\n\nexport interface IWrapper<T>{\n  item: T;\n  in: boolean;\n  targetIn: boolean;\n}\n\ninterface IProps<T>{\n  items: T[];\n  timeout?: number;\n  component: (item:T) => ReactNode;\n  identifier: (item:T) => string|number;\n}\n\ninterface IState<T>{\n  wrappers: IWrapper<T>[];\n}\n\n\nclass ListCollapse<T> extends Component<IProps<T>, IState<T>> {\n\n  static defaultProps = {\n    animation: true\n  }\n\n  constructor(props:IProps<T>) {\n    super(props)\n    this.handleRemove = this.handleRemove.bind(this);\n    this.renderWrapper = this.renderWrapper.bind(this);\n\n    this.state = {\n      wrappers: props.items.map((item:T) => {\n        return { item, in: true, targetIn: true }\n      })\n    }\n  }\n\n  doRemovals(items:T[], wrappers:IWrapper<T>[]){\n    const { identifier } = this.props;\n    wrappers.forEach((wrapper) => {\n      wrapper.targetIn = !!items.find((item) => identifier(item) === identifier(wrapper.item))\n    });\n  }\n\n  doInsertionsAndUpdates(items:T[], wrappers:IWrapper<T>[]){\n    const { identifier } = this.props;\n    for(let i = 0; i < items.length; i++){\n      const item = items[i];\n      const index = wrappers.findIndex((wrapper) => identifier(item) === identifier(wrapper.item));\n      if(index >= 0){\n        wrappers[index].item = item;\n      }else{\n        wrappers.splice(i, 0, {item: item, in: false, targetIn: true});\n      }\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps:IProps<T>) {\n    const { items } = newProps;\n    const wrappers = this.state.wrappers.slice();\n    this.doRemovals(items, wrappers);\n    this.doInsertionsAndUpdates(items, wrappers);\n    this.setState({ wrappers: wrappers});\n  }\n\n  componentDidUpdate(){\n    let doUpdate = false;\n    const wrappers = this.state.wrappers.map((wrapper) => {\n      if(wrapper.in !== wrapper.targetIn){\n        wrapper.in = wrapper.targetIn;\n        doUpdate = true;\n      }\n      return wrapper;\n    });\n    if(doUpdate){\n      this.setState({ wrappers: wrappers });\n    }\n  }\n\n  handleRemove(id: number){\n    this.setState({\n      wrappers: this.state.wrappers.filter((wrapper) => this.props.identifier(wrapper.item) !== id)\n    });\n  }\n\n\n  renderWrapper(wrapper:IWrapper<T>) {\n    const { identifier } = this.props;\n    return (\n      <Collapse\n        key={identifier(wrapper.item)}\n        in={wrapper.in}\n        timeout={this.props.timeout}\n        onExited={() => this.handleRemove(identifier(wrapper.item) as number)}>\n        {this.props.component(wrapper.item)}\n      </Collapse>\n    );\n  }\n\n  render() {\n    return this.state.wrappers.map(this.renderWrapper);\n  }\n}\n\nexport default ListCollapse;\n","import React, { Fragment, ReactElement, ReactNode, useState } from 'react';\nimport { Box, Button, Dialog, Grid, TextField } from '@material-ui/core';\n\nexport interface CodeSelectProps<T>{\n  label: string;\n  options: T[];\n  value: T;\n  keyFn: (option:T) => string|number|undefined;\n  titleFn: (option:T) => string;\n  descriptionFn: (option:T) => string|ReactNode;\n  onChange: (option:T) => void;\n}\n\n// normal function\nfunction CodeSelect<T>(props: CodeSelectProps<T>): ReactElement<CodeSelectProps<T>> {\n  const { label, options, value, keyFn, titleFn, descriptionFn, onChange } = props;\n  const [open,setOpen] = useState(false);\n  const [focus, setFocus] = useState(false);\n\n  function handleFocus(){\n    if(!focus){\n      setFocus(true);\n      setOpen(true);\n    }\n  }\n\n  function handleBlur(){\n    if(!open){\n      setFocus(false);\n    }\n  }\n\n  function handleClick(){\n    setOpen(true);\n  }\n\n  return (\n    <Fragment>\n      <TextField\n        fullWidth\n        label={label}\n        value={titleFn(value)}\n        variant=\"outlined\"\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onClick={handleClick}\n        inputProps={{ style: {caretColor: 'transparent'} }} />\n      <Dialog open={open} onClose={() => setOpen(false)}>\n        <Box p={1}>\n          <Grid container spacing={1} direction=\"column\">\n            {options.map((option) => (\n              <Grid item key={keyFn(option)}>\n                <Button fullWidth variant=\"contained\" onClick={() => {\n                  setOpen(false);\n                  onChange(option);\n                }} style={{textAlign: 'left'}}>\n                  {descriptionFn(option)}\n                </Button>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      </Dialog>\n    </Fragment>\n  );\n}\n\nexport default CodeSelect;\n","import React, { ChangeEvent, FC, FocusEvent, KeyboardEvent, useState } from 'react';\nimport { fromMoneyS, toMoneyS } from './service';\nimport { TextField } from '@material-ui/core';\n\nexport interface IMoneyInputProps {\n  name?: string;\n  label?: string;\n  value?: number;\n  onChange: (value?: number) => void;\n  error?: boolean;\n  helperText?: string;\n  required?: boolean;\n}\n\nconst MoneyInput: FC<IMoneyInputProps> = ({ name, label, value, onChange, error, helperText, required}) => {\n\n  if(required && error === undefined){\n    error = (value == null);\n  }\n\n  const [internalValue, setInternalValue] = useState(toMoneyS(value));\n  const [prevValue, setPrevValue] = useState(value);\n\n  if(value !== prevValue){\n    setInternalValue(toMoneyS(value));\n    setPrevValue(value);\n  }\n\n  function handleChange(){\n    const newInternalValue = fromMoneyS(internalValue);\n    setInternalValue(toMoneyS(newInternalValue));\n    onChange(newInternalValue);\n  }\n\n  return <TextField\n    name={name}\n    label={label}\n    fullWidth\n    type=\"number\"\n    variant=\"outlined\"\n    value={internalValue}\n    error={error}\n    helperText={helperText}\n    required={required}\n    onChange={(event: ChangeEvent<HTMLInputElement>) => setInternalValue(event.target.value)}\n    onFocus={(event: FocusEvent<HTMLInputElement>) => event.target.select()}\n    onBlur={() => handleChange()}\n    onKeyDown={(event: KeyboardEvent) => {\n      if(event.key === 'Enter'){\n        handleChange()\n      }\n    }} />\n}\n\nexport default MoneyInput;\n","import React, { ChangeEvent, FC } from 'react';\nimport { Collapse, Grid, TextField } from '@material-ui/core';\n\nimport TransactionBreakdown from '../types/TransactionBreakdown';\nimport TransactionBreakdownCode, { describeTransactionBreakdownCode, describeTransactionBreakdownCodeShort } from '../types/TransactionBreakdownCode';\n\nimport CodeSelect from '../../utils/components/CodeSelect';\nimport MoneyInput from '../../utils/money/MoneyInput';\n\n\nexport interface TransactionBreakdownRowProps{\n  breakdown: TransactionBreakdown;\n  onChange: (breakdown: TransactionBreakdown) => void;\n  descriptionRequired?: boolean;\n  amtRequired?: boolean;\n}\n\nconst TransactionBreakdownRow: FC<TransactionBreakdownRowProps> = ({ breakdown, onChange, children, descriptionRequired, amtRequired}) => {\n\n  return (\n    <Grid container spacing={1} alignItems=\"center\">\n      <Grid item xs={12} sm>\n        <CodeSelect\n          label=\"Type\"\n          value={breakdown.code}\n          keyFn={(code: TransactionBreakdownCode) => code}\n          titleFn={describeTransactionBreakdownCode}\n          descriptionFn={describeTransactionBreakdownCode}\n          options={Object.keys(TransactionBreakdownCode) as TransactionBreakdownCode[]}\n          onChange={(code: TransactionBreakdownCode) =>\n            onChange({ ...breakdown,\n               code,\n               description: code === TransactionBreakdownCode.OTHER ? '' : describeTransactionBreakdownCodeShort(code) })} />\n      </Grid>\n      <Grid item xs sm={4}>\n        <MoneyInput\n          label=\"Amount\"\n          value={breakdown.amt}\n          required={amtRequired}\n          onChange={(amt) => onChange({ ...breakdown, amt })} />\n      </Grid>\n      <Grid item>\n        {children}\n      </Grid>\n      <Grid item xs={12}>\n        <Collapse in={!!breakdown.code}>\n          <TextField\n            required={descriptionRequired}\n            fullWidth\n            multiline\n            label=\"Description\"\n            variant=\"outlined\"\n            value={breakdown.description}\n            onChange={(event: ChangeEvent<HTMLInputElement>) =>\n              onChange({ ...breakdown, description: event.target.value})} />\n        </Collapse>\n      </Grid>\n    </Grid>\n  );\n}\n\nTransactionBreakdownRow.defaultProps = {\n  descriptionRequired: false\n}\n\nexport default TransactionBreakdownRow;\n","import React, { FC, ReactNode, useState } from 'react';\nimport { Box, Button, Grid } from '@material-ui/core';\n\nimport ListCollapse from '../../utils/components/ListCollapse';\nimport ConfirmButton from '../../utils/components/ConfirmButton';\nimport TransactionBreakdown from '../types/TransactionBreakdown';\nimport TransactionBreakdownCode from '../types/TransactionBreakdownCode';\nimport BreakdownRow from './BreakdownRow';\n\nexport interface TransactionBreakdownListProps{\n  breakdowns: TransactionBreakdown[];\n  onChange: (breakdowns: TransactionBreakdown[]) => void;\n  amtRequired?: boolean;\n}\n\nconst TransactionBreakdownList: FC<TransactionBreakdownListProps> = ({ breakdowns, onChange, amtRequired}) => {\n\n  const [newBreakdown,setNewBreakdown] = useState<TransactionBreakdown>({\n    code: TransactionBreakdownCode.OTHER,\n    description: '',\n    amt: 0 });\n\n  function renderItems(){\n    return (\n      <ListCollapse\n        items={breakdowns}\n        identifier={(breakdown) => breakdown.id as number}\n        component={renderItem} />\n    );\n  }\n\n  function renderItem(breakdown: TransactionBreakdown){\n    return renderItemLayout(breakdown,\n      handleBreakdownUpdate,\n      <ConfirmButton variant=\"contained\" onClick={() => handleBreakdownDelete(breakdown) }>\n        Delete\n      </ConfirmButton>);\n  }\n\n  function renderItemLayout(breakdown: TransactionBreakdown,\n    onChange: (breakdown: TransactionBreakdown) => void,\n    button: ReactNode,\n    descriptionRequired = true){\n    return (\n      <Box key={breakdown.id} pb={3}>\n        <BreakdownRow\n          breakdown={breakdown}\n          onChange={onChange}\n          descriptionRequired={descriptionRequired}\n          amtRequired={amtRequired}>\n          {button}\n        </BreakdownRow>\n      </Box>\n    )\n  }\n\n  function renderCreate(){\n    return renderItemLayout(newBreakdown,\n      setNewBreakdown,\n      <Button variant=\"contained\" onClick={handleBreakdownCreate}>\n        Create\n      </Button>, false);\n  }\n\n  function handleBreakdownCreate(){\n    const newBreakdowns = breakdowns.slice();\n    newBreakdowns.push({ ...newBreakdown, id: new Date().getTime() })\n    onChange(newBreakdowns);\n  }\n\n  function handleBreakdownDelete(breakdown: TransactionBreakdown){\n    const index = breakdowns.findIndex((b) => b.id === breakdown.id);\n    const newBreakdowns = breakdowns.slice();\n    newBreakdowns.splice(index, 1);\n    onChange(newBreakdowns);\n  }\n\n  function handleBreakdownUpdate(breakdown: TransactionBreakdown){\n    const index = breakdowns.findIndex((b) => b.id === breakdown.id);\n    const newBreakdowns = breakdowns.slice();\n    newBreakdowns[index] = breakdown;\n    onChange(newBreakdowns);\n  }\n\n  return <Box p={1}>\n    <Grid container direction=\"column\" spacing={1}>\n      {renderItems()}\n      {renderCreate()}\n    </Grid>\n  </Box>\n\n}\n\nexport default TransactionBreakdownList;\n","import React, { FC, useState } from 'react';\nimport { Button, Dialog, TextField } from '@material-ui/core';\n\nimport moment from 'moment';\nimport {\n  DatePicker,\n  MuiPickersUtilsProvider\n} from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\n\nimport { DATE_FORMAT } from '../date';\n\nexport interface DatePickerProps{\n  value: string;\n  onChange: (value?: string) => void;\n  label: string;\n  required?: boolean;\n  displayFormat?: string;\n}\n\nconst DateSelect: FC<DatePickerProps> = ({ value, onChange, label, required, displayFormat }) => {\n  const [open, setOpen] = useState(false);\n  const [focus, setFocus] = useState(false);\n  if(!value && required){\n    value = moment().format(DATE_FORMAT);\n  }\n  const valueStr = value ? moment(value, DATE_FORMAT).format(displayFormat || DATE_FORMAT) : '';\n\n  function handleDateChange(newDate: any){\n    const newMoment = moment(newDate);\n    onChange(newMoment.format(DATE_FORMAT));\n    setOpen(false);\n  }\n\n  function handleFocus(newFocus: boolean){\n    if(newFocus && !focus){\n      setOpen(true);\n      setFocus(true);\n    }else if(!open){\n      setFocus(false);\n    }\n  }\n\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <TextField\n        fullWidth\n        required={required}\n        variant=\"outlined\"\n        label={label}\n        value={valueStr}\n        onFocus={() => handleFocus(true)}\n        onBlur={() => handleFocus(false)}\n        onClick={() => setOpen(true)}\n        inputProps={{ style: {caretColor: 'transparent'} }} />\n      <Dialog open={open} onClose={() => setOpen(false)}>\n        <DatePicker\n          variant=\"static\"\n          value={value ? moment(value, DATE_FORMAT) : moment()}\n          onChange={handleDateChange} />\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              onChange(undefined);\n              setOpen(false);\n            }}>\n            Clear\n          </Button>\n      </Dialog>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nexport default DateSelect;\n","import React, { ChangeEvent, FC, FormEvent, useState } from 'react';\nimport {\nBox,\nCheckbox,\nCollapse,\nFormControlLabel,\nGrid,\nTextField,\nTypography } from '@material-ui/core';\n\nimport Transaction from '../types/Transaction';\nimport TransactionBreakdown from '../types/TransactionBreakdown';\nimport TransactionCode, { describeTransactionCode, describeTransactionCodeShort } from '../types/TransactionCode';\nimport TransactionBreakdownList from './BreakdownList';\n\nimport CodeSelect from '../../utils/components/CodeSelect';\nimport DateSelect from '../../utils/components/DateSelect';\nimport MoneyInput from '../../utils/money/MoneyInput';\nimport useSettings from '../../settings/useSettings';\n\nexport interface TransactionFormProps{\n  transaction: Transaction;\n  onSubmit: (transaction: Transaction) => void;\n}\n\nconst TransactionForm: FC<TransactionFormProps> = ({ transaction, onSubmit, children }) => {\n\n  const [internalTransaction, setInternalTransaction] = useState(transaction);\n  const hasBreakdown = !!internalTransaction.breakdown;\n  const [descriptionError, setDescriptionError] = useState(false);\n  const settings = useSettings();\n\n  function handleSubmit(event: FormEvent<HTMLFormElement>){\n    event.preventDefault();\n    onSubmit(internalTransaction);\n  }\n\n  function handleDescriptionChange(event: ChangeEvent<HTMLInputElement>){\n    setInternalTransaction({ ...internalTransaction, description: event.target.value });\n    setDescriptionError(!event.target.value);\n  }\n\n  function handleCodeChange(_code: TransactionCode){\n    const code = _code as TransactionCode;\n    const newTransaction = {\n      ...internalTransaction,\n      code,\n      description: describeTransactionCodeShort(code)\n    };\n    setInternalTransaction(newTransaction);\n    setDescriptionError(descriptionError && !newTransaction.description);\n  }\n\n  function handleCash(cash?: number){\n    setInternalTransaction(decorateTransaction({ ...internalTransaction, cash }));\n  }\n\n  function handleCheques(cheques?: number){\n    setInternalTransaction(decorateTransaction({ ...internalTransaction, cheques }));\n  }\n\n  function decorateTransaction(newTransaction: Transaction){\n    const { code, cash, cheques} = newTransaction;\n    if((cash != null) && (cheques != null)){\n      if(code === TransactionCode.D){\n        newTransaction.primary_amt = cash + cheques;\n        newTransaction.receipts_amt = -newTransaction.primary_amt;\n      }else{\n        newTransaction.receipts_amt = cash + cheques;\n      }\n    }\n    return newTransaction;\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Box pt={2} pb={2}>\n        <Grid container direction=\"column\" spacing={1}>\n          <Grid item>\n            <Grid container spacing={1}>\n              <Grid item xs={3}>\n                <CodeSelect\n                  label=\"Code\"\n                  value={internalTransaction.code}\n                  keyFn={(code: TransactionCode) => code}\n                  titleFn={(code: TransactionCode) => code}\n                  descriptionFn={(code) => <Grid container spacing={2}>\n                    <Grid item xs={2}>\n                      <Typography variant=\"h6\">{code}</Typography>\n                    </Grid>\n                    <Grid item xs>\n                      {describeTransactionCode(code)}\n                    </Grid>\n                  </Grid>}\n                  options={Object.keys(TransactionCode) as TransactionCode[]}\n                  onChange={handleCodeChange} />\n              </Grid>\n              <Grid item xs={9}>\n                <TextField\n                  required\n                  fullWidth\n                  multiline\n                  error={descriptionError}\n                  label=\"Description\"\n                  variant=\"outlined\"\n                  value={internalTransaction.description}\n                  onChange={handleDescriptionChange}\n                  onBlur={() => setDescriptionError(!internalTransaction.description)} />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid container spacing={1}>\n              <Grid item xs={6}>\n                <DateSelect\n                  value={internalTransaction.date}\n                  onChange={(date?: string) => {\n                    setInternalTransaction({\n                      ...internalTransaction, date: date as string, apply_on_date: date as string\n                    });\n                  }}\n                  label=\"Date\"\n                  required={true}\n                  displayFormat={settings.formatting.date_format} />\n              </Grid>\n              <Grid item xs={6}>\n                <DateSelect\n                  value={internalTransaction.apply_on_date as string}\n                  onChange={(apply_on_date?: string) => {\n                    setInternalTransaction({ ...internalTransaction, apply_on_date });\n                  }}\n                  label=\"Applicable Date\"\n                  required={false}\n                  displayFormat={settings.formatting.date_format} />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid container spacing={1}>\n              <Grid item xs={4}>\n                <MoneyInput\n                  required\n                  label=\"Receipts\"\n                  value={internalTransaction.receipts_amt}\n                  onChange={(receipts_amt) => setInternalTransaction({ ...internalTransaction, receipts_amt: receipts_amt as number })} />\n              </Grid>\n              <Grid item xs={4}>\n                <MoneyInput\n                  required\n                  label=\"Primary\"\n                  value={internalTransaction.primary_amt}\n                  onChange={(primary_amt) => setInternalTransaction({ ...internalTransaction, primary_amt: primary_amt as number })} />\n              </Grid>\n              <Grid item xs={4}>\n                <MoneyInput\n                  required\n                  label=\"Other\"\n                  value={internalTransaction.other_amt}\n                  onChange={(other_amt) => setInternalTransaction({ ...internalTransaction, other_amt: other_amt as number })} />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid container spacing={1}>\n              <Grid item xs={6}>\n                <MoneyInput\n                  label=\"Cash\"\n                  value={internalTransaction.cash}\n                  onChange={handleCash} />\n              </Grid>\n              <Grid item xs={6}>\n                <MoneyInput\n                  label=\"Cheques\"\n                  value={internalTransaction.cheques}\n                  onChange={handleCheques} />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <TextField\n              fullWidth\n              label=\"Confirmation Code\"\n              variant=\"outlined\"\n              value={internalTransaction.confirmation_code}\n              onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                setInternalTransaction({ ...internalTransaction, confirmation_code: event.target.value })} />\n          </Grid>\n          <Grid item>\n            <Box pl={1} pr={1} pt={1}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={hasBreakdown}\n                    color=\"primary\"\n                    onChange={() => setInternalTransaction({...internalTransaction, breakdown: hasBreakdown ? undefined : []})} />\n                }\n                label=\"Include Breakdown\" />\n            </Box>\n          </Grid>\n          <Grid item>\n            <Collapse in={hasBreakdown}>\n              {!!internalTransaction.breakdown &&\n                <TransactionBreakdownList breakdowns={internalTransaction.breakdown}\n                  onChange={(breakdown: TransactionBreakdown[]) =>\n                    setInternalTransaction({...internalTransaction, breakdown})} />\n              }\n            </Collapse>\n          </Grid>\n          <Grid item>\n            <Box pb={2} pt={1}>\n              <Grid container justify=\"flex-end\">\n                <Grid item xs sm=\"auto\">\n                  {children}\n                </Grid>\n              </Grid>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </form>\n  )\n}\n\nexport default TransactionForm;\n","import React, { FC, Fragment, useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { Box, Button, Grid } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\nimport { dateToMonth } from '../../utils/date';\nimport Alert from '../../utils/components/Alert';\nimport Loader from '../../utils/components/Loader';\nimport ConfirmButton from '../../utils/components/ConfirmButton';\nimport TransactionForm from './TransactionForm'\nimport Transaction from '../types/Transaction';\nimport { read, update, destroy } from '../transactionService';\nimport { monthTransactionsPath } from './MonthTransactionsController';\n\nexport const UPDATE_TRANSACTION_PATH = '/update-transaction/:transactionId';\n\nexport function updateTransactionPath(transactionId: number){\n  return UPDATE_TRANSACTION_PATH.replace(':transactionId', transactionId.toString());\n}\n\nexport interface UpdateTransactionControllerProps{\n  setTitle: (title: string) => void;\n}\n\nexport interface UpdateTransactionControllerParams{\n  transactionId: string;\n}\n\nconst UpdateTransactionController: FC<UpdateTransactionControllerProps> = ({ setTitle }) => {\n  setTitle('Update Transaction');\n  const { push } = useHistory();\n  const transactionId = parseInt(useParams<UpdateTransactionControllerParams>().transactionId as any);\n  const [working,setWorking] = useState(false);\n  const [transaction,setTransaction] = useState<Transaction|undefined>(undefined);\n  const theme = useTheme();\n  const smUp = useMediaQuery(theme.breakpoints.up('sm'));\n\n  useEffect(() => {\n    let mounted = true;\n    setWorking(true);\n    read(transactionId).then((transaction) => {\n      if(mounted){\n        setTransaction(transaction);\n        setWorking(false);\n      }\n    }, () => {\n      if(mounted){\n        setWorking(false)\n      }\n    });\n    return () => {\n      mounted = false;\n    }\n  }, [transactionId]);\n\n  function handleSave(transaction: Transaction){\n    setWorking(true);\n    return new Promise<Transaction>((resolve, reject) => {\n      function handleReject(err: any){\n        setWorking(false);\n        reject(err);\n      }\n      update(transaction).then(() => {\n        setWorking(false);\n        resolve();\n        push(monthTransactionsPath(dateToMonth(transaction.date)));\n      }, handleReject);\n    });\n  }\n\n  function handleDelete(){\n    setWorking(true);\n    return new Promise<Transaction>((resolve, reject) => {\n      destroy((transaction as Transaction).id as number).then(() => {\n        resolve();\n        if(transaction){\n          push(monthTransactionsPath(dateToMonth(transaction.date)));\n        }\n      }, (err: any) => {\n        setWorking(false);\n        reject(err);\n      });\n    });\n  }\n\n  if(working){\n    return <Loader />\n  }\n\n  if(!transaction){\n    return <Alert msg=\"No Transaction Found\" />\n  }\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item xs={(!smUp) || 'auto'}>\n          <Box p={1}>\n            <Button\n              fullWidth={!smUp}\n              variant=\"contained\"\n              onClick={() => push(monthTransactionsPath(dateToMonth(transaction.date)))}>\n              <NavigateBeforeIcon />\n              Back to Month\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n      <TransactionForm\n        transaction={transaction}\n        onSubmit={handleSave}>\n        {working ? <Loader /> :\n          <Grid container direction={smUp ? 'row' : 'column'} spacing={1} alignItems=\"stretch\">\n            <Grid item xs={(!smUp) || 'auto'}>\n              <Button\n                fullWidth={!smUp}\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\">\n                <EditIcon />\n                Update Transaction\n              </Button>\n            </Grid>\n            <Grid item xs={(!smUp) || 'auto'}>\n              <ConfirmButton\n                fullWidth={!smUp}\n                type=\"button\"\n                variant=\"contained\"\n                onClick={handleDelete}>\n                <DeleteIcon />\n                Delete Transaction\n              </ConfirmButton>\n            </Grid>\n          </Grid>\n        }\n      </TransactionForm>\n    </Fragment>\n  )\n}\n\nexport default UpdateTransactionController;\n","import { object } from 'yup';\nimport { YupContext } from '../../utils/schemas';\n\nimport MonthTransactions from '../types/MonthTransactions';\nimport transactionSetSchema from './transactionSetSchema';\nimport { dateStr, meetingDates } from '../../settings/SettingsService';\nimport TransactionCode from '../types/TransactionCode';\nimport { dateToMonth } from '../../utils/date';\n\nconst MonthTransactionsSchema = object().shape({\n  settings: object().required(),\n  transactionSet: transactionSetSchema().required()\n}).test('expected_contributions',\n  'Missing Expected Contributions',\n  function(this: YupContext, monthTransactions: MonthTransactions) {\n    const { settings, boxes } = monthTransactions;\n    const { transactions, start } = monthTransactions.transactionSet;\n    const missingContributions: string[] = [];\n    meetingDates(dateToMonth(start.date), settings.meeting_days).forEach(date => {\n      boxes.forEach(box => {\n        const transaction = transactions.find(transaction =>\n          date === transaction.date && box.code === transaction.code\n        );\n        if(!transaction){\n          missingContributions.push(`${dateStr(settings, date)} (${box.code})`);\n        }\n      });\n    })\n    if(!missingContributions.length){\n      return true;\n    }\n    return this.createError({ message: 'Missing contributions : ' + missingContributions.join(', ')})\n  }\n).test('no_duplicate_contributions',\n  'No Duplicate Contributions',\n  function(this: YupContext, monthTransactions: MonthTransactions) {\n    const { settings } = monthTransactions;\n    const { transactions } = monthTransactions.transactionSet;\n    const duplicateTransactions = transactions.filter(a => {\n      if(a.code !== TransactionCode.W && a.code !== TransactionCode.C){\n        return false;\n      }\n      return !!transactions.find(b => {\n        return (a.id as number) < (b.id as number) && a.code === b.code && a.date === b.date;\n      })\n    });\n    if(!duplicateTransactions.length){\n      return true;\n    }\n    return this.createError({ message: `More than one contribution found on: ${duplicateTransactions.map(transaction =>\n      dateStr(settings, transaction.date)+' ('+transaction.code+')').join(', ')}`})\n  }\n).test('receipts_balance',\n  'Receipts should balance at 0',\n  function(monthTransactions: MonthTransactions) {\n    const receipts = monthTransactions.transactionSet.transactions.reduce(\n      (sum, transaction) => sum + transaction.receipts_amt, 0);\n    return receipts === 0\n  }\n).test('no_unapplied_transactions',\n  'There were unapplied transactions',\n  function(this: YupContext, monthTransactions: MonthTransactions) {\n    const unappliedTransactions = monthTransactions.transactionSet.transactions.filter(\n      transaction => !transaction.apply_on_date);\n    if(!unappliedTransactions.length){\n      return true;\n    }\n    return this.createError({ message: `Unapplied transactions found on: ${unappliedTransactions.map(transaction =>\n      dateStr(monthTransactions.settings, transaction.date)+' ('+transaction.code+')').join(', ')}`})\n  }\n).test('has_min_interest',\n  'Expected additional interest payments',\n  function(this: YupContext, monthTransactions: MonthTransactions) {\n    const { transactionSet, settings } = monthTransactions;\n    const count = transactionSet.transactions.reduce((sum, transaction) => {\n      return sum + ((transaction.code === TransactionCode.I) ? 1 : 0);\n    }, 0);\n    return (count >= settings.min_num_interest);\n  }\n).test('has_min_expenditures',\n  'Expected additional expenditures',\n  function(this: YupContext, monthTransactions: MonthTransactions) {\n    const { transactionSet, settings } = monthTransactions;\n    const count = transactionSet.transactions.reduce((sum, transaction) => {\n      return sum + ((transaction.code === TransactionCode.E) ? 1 : 0);\n    }, 0);\n    return (count >= settings.min_num_expenditure);\n  }\n);\n\nexport default MonthTransactionsSchema;\n","import { array, object } from 'yup';\n\nimport dateBalanceSchema from './dateBalanceSchema';\nimport transactionSchema from './transactionSchema';\n\nexport default function transactionSetSchema(){\n  return object().shape({\n    start: dateBalanceSchema(),\n    transactions: array().of(transactionSchema().required())\n  });\n}\n","import { number, object } from 'yup';\nimport { dateStr } from '../../utils/schemas';\n\nexport default function dateBalanceSchema(){\n  return object().shape({\n    date: dateStr.required(),\n    receipts: number().integer(),\n    primary: number().integer(),\n    other: number().integer(),\n    applied_receipts: number().integer(),\n    applied_primary: number().integer(),\n    applied_other: number().integer(),\n  });\n}\n","import React, { FC } from 'react';\nimport { Box, Grid } from '@material-ui/core';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Loader from '../../utils/components/Loader';\n\nexport interface WarningListProps{\n  warnings?: string[];\n  working: boolean;\n}\n\nconst WarningList: FC<WarningListProps> = ({ warnings, working }) => {\n\n  function renderWarning(warning: string){\n    return (\n      <Grid key={warning} container spacing={1}>\n        <Grid item>\n          <Box color=\"error.main\">\n            <ErrorIcon />\n          </Box>\n        </Grid>\n        <Grid item xs>\n          {warning}\n        </Grid>\n      </Grid>\n    );\n  }\n\n  if(working){\n    return <Loader />\n  }\n\n  if(!warnings){\n    return null;\n  }\n\n  return (\n    <Grid container direction=\"column\">\n      {warnings.map(renderWarning)}\n    </Grid>\n  )\n}\n\nexport default WarningList;\n","import React, { FC, useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { Box, Button, Grid } from '@material-ui/core';\nimport { useParams, useHistory } from 'react-router-dom';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\nimport { DATE_FORMAT, MONTH_FORMAT, thisMonthStr } from '../../utils/date';\nimport useSettings from '../../settings/useSettings';\n\nimport { loadTransactionSet } from '../transactionService';\nimport { monthTransactionsPath } from './MonthTransactionsController';\nimport monthTransactionsSchema from '../schemas/monthTransactionsSchema';\nimport { list as listContributionBoxes } from '../../contributionBoxes/contributionBoxService';\nimport WarningList from './WarningList';\n\nexport const MONTH_WARNINGS_PATH = \"/month-warnings/:month\";\n\nexport function monthWarningsPath(month: string){\n  return MONTH_WARNINGS_PATH.replace(':month', month || thisMonthStr());\n}\n\nexport interface MonthWarningsProps{\n  setTitle: (title: string) => void;\n}\n\nexport interface MonthWarningsParams{\n  month?: string\n}\n\nconst MonthWarningsController: FC<MonthWarningsProps> = ({ setTitle }) => {\n\n  const [working, setWorking] = useState(false);\n  const [warnings, setWarnings] = useState<string[]|undefined>(undefined);\n  const settings = useSettings();\n  const { push } = useHistory();\n  const theme = useTheme();\n  const smUp = useMediaQuery(theme.breakpoints.up('sm'));\n  const month = useParams<MonthWarningsParams>().month as string;\n  const m = moment(month, MONTH_FORMAT).startOf('month');\n  const min = m.format(DATE_FORMAT);\n  const max = m.add(1, 'month').format(DATE_FORMAT);\n\n  setTitle(`${moment(month, MONTH_FORMAT).format(settings.formatting.month_format)} Warnings`);\n\n  useEffect(() => {\n    let mounted = true;\n    setWorking(true);\n    Promise.all([\n      loadTransactionSet(min, max),\n      listContributionBoxes()\n    ]).then(([ loadedTransactionSet, boxes]) => {\n      if(mounted){\n        monthTransactionsSchema.validate({\n          transactionSet: loadedTransactionSet,\n          settings,\n          boxes\n        }, {\n          abortEarly: false\n        }).then(() => {\n          if(mounted){\n            setWarnings([]);\n            setWorking(false);\n          }\n        }, (err) => {\n          if(mounted){\n            setWarnings(err.errors);\n            setWorking(false);\n          }\n        });\n      }\n    }, () => {\n      if(mounted){\n        setWorking(false);\n      }\n    });\n    return () => {\n      mounted = false;\n    }\n  }, [min, max, settings]);\n\n  return (\n    <Box p={1}>\n      <Grid container direction=\"column\">\n        <Grid item xs={(!smUp) || 'auto'}>\n          <Box pb={1}>\n            <Button\n              fullWidth={!smUp}\n              variant=\"contained\"\n              onClick={() => push(monthTransactionsPath(month))}>\n              <NavigateBeforeIcon />\n              Back to Month\n            </Button>\n          </Box>\n        </Grid>\n        <WarningList warnings={warnings} working={working} />\n      </Grid>\n    </Box>\n  )\n}\n\nexport default MonthWarningsController\n","import React, { FC, useEffect, useState } from 'react';\nimport { Box, Button, Divider, Grid, Typography } from '@material-ui/core';\nimport { useParams, useHistory } from 'react-router-dom';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\nimport useQuery from '../../utils/useQuery';\nimport { dateToMonth } from '../../utils/date';\nimport Loader from '../../utils/components/Loader';\nimport Money from '../../utils/money/Money';\nimport useSettings from '../../settings/useSettings';\nimport { dateStr } from '../../settings/SettingsService';\n\nimport DateBalance from '../types/DateBalance';\nimport Transaction from '../types/Transaction';\nimport { loadDateBalance, list } from '../transactionService';\nimport MonthTransactionsRow from './MonthTransactionsRow';\nimport { updateTransactionPath } from './UpdateTransactionController';\nimport { monthTransactionsPath } from './MonthTransactionsController';\n\nexport const DATE_BALANCE_PATH = \"/date-balance/:date\";\n\nexport function dateBalancePath(date: string, month?: string){\n  let path = DATE_BALANCE_PATH.replace(':date', date);\n  if(month){\n    path += '?month=' + month;\n  }\n  return path;\n}\n\nexport interface DateBalanceProps{\n  setTitle: (title: string) => void;\n}\n\nexport interface MonthTransactionsParams{\n  date?: string\n}\n\nconst DateBalanceController: FC<DateBalanceProps> = ({ setTitle }) => {\n\n  const [working, setWorking] = useState(false);\n  const [dateBalance, setDateBalance] = useState<DateBalance|undefined>(undefined);\n  const [pendingTransactions, setPendingTransactions] = useState<Transaction[]|undefined>(undefined);\n  const date = useParams<MonthTransactionsParams>().date as string;\n  const query = useQuery();\n  const settings = useSettings();\n  setTitle(`${dateStr(settings, date)} Balance`);\n  const { push } = useHistory();\n  const theme = useTheme();\n  const smUp = useMediaQuery(theme.breakpoints.up('sm'));\n\n  useEffect(() => {\n    let mounted = true;\n    setWorking(true);\n    Promise.all([\n      loadDateBalance(date),\n      list({ date_max: date, apply_on_date_min: date })\n    ]).then(([loadedDateBalance, transactions]) => {\n      if(mounted){\n        setDateBalance(loadedDateBalance);\n        setPendingTransactions(transactions);\n        setWorking(false);\n      }\n    }, () => {\n      if(mounted){\n        setWorking(false);\n      }\n    });\n    return () => {\n      mounted = false;\n    }\n  }, [date]);\n\n\n  if(working){\n    return <Loader />\n  }\n\n  function renderBalanceRow(){\n    if(!dateBalance){\n      return null;\n    }\n    return (\n      <Box pb={1}>\n        <MonthTransactionsRow\n          description=\"Account Balance\"\n          receipts={<Money value={dateBalance.receipts} fontWeight={500} />}\n          primary={<Money value={dateBalance.primary} fontWeight={500} />}\n          other={<Money value={dateBalance.other} fontWeight={500} />} />\n      </Box>\n    )\n  }\n\n  function renderTransactionRows(){\n    if(!pendingTransactions){\n      return null;\n    }\n    return (\n      pendingTransactions.map((transaction) => (\n        <Box key={transaction.id} pb={1}>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            onClick={() => push(updateTransactionPath(transaction.id as number))}>\n            <MonthTransactionsRow\n              description={transaction.description}\n              receipts={<Money value={transaction.receipts_amt} />}\n              primary={<Money value={transaction.primary_amt} />}\n              other={<Money value={transaction.other_amt} />} />\n          </Button>\n        </Box>\n      ))\n    );\n  }\n\n  function renderAppliedBalanceRow(){\n    if(!dateBalance){\n      return null;\n    }\n    return (\n      <Box pt={1}>\n        <MonthTransactionsRow\n          description=\"Balance on Statement\"\n          receipts={<Money value={dateBalance.applied_receipts} fontWeight={500} />}\n          primary={<Money value={dateBalance.applied_primary} fontWeight={500} />}\n          other={<Money value={dateBalance.applied_other} fontWeight={500} />} />\n      </Box>\n    )\n  }\n\n  return (\n    <Box p={1}>\n      <Grid container>\n        <Grid item xs={(!smUp) || 'auto'}>\n          <Box pb={1}>\n            <Button\n              fullWidth={!smUp}\n              variant=\"contained\"\n              onClick={() => push(monthTransactionsPath(query.get('month') || dateToMonth(date)))}>\n              <NavigateBeforeIcon />\n              Back to Month\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n      {renderAppliedBalanceRow()}\n      <Divider />\n      <Typography variant=\"h6\">Pending Transactions</Typography>\n      {renderTransactionRows()}\n      <Divider />\n      {renderBalanceRow()}\n    </Box>\n  )\n}\n\nexport default DateBalanceController\n","import {\n  useLocation\n} from \"react-router-dom\";\n\n\nexport default function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n","import React, { FC } from 'react';\nimport { Box, Dialog, Grid, Typography } from '@material-ui/core';\nimport WarningList from './WarningList';\n\nexport interface MonthWarningsDialogProps{\n  open: boolean;\n  onClose: () => void;\n  warnings?: string[];\n  working: boolean;\n}\n\n\nconst MonthWarningsDialog: FC<MonthWarningsDialogProps> = ({ open, onClose, warnings, working }) => {\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <Box p={1}>\n        <Grid container direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h6\">Warnings</Typography>\n          </Grid>\n          <WarningList warnings={warnings} working={working} />\n        </Grid>\n      </Box>\n    </Dialog>\n  )\n}\n\nexport default MonthWarningsDialog\n","import React, { FC, Fragment, useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { Box, Button, Grid } from '@material-ui/core';\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport { DATE_FORMAT, MONTH_FORMAT, thisMonthStr } from '../../utils/date';\nimport useSettings from '../../settings/useSettings';\n\nimport Loader from '../../utils/components/Loader';\nimport Money from '../../utils/money/Money';\nimport TransactionSet from '../types/TransactionSet';\nimport DateBalance from '../types/DateBalance';\nimport { loadTransactionSet, loadDateBalance } from '../transactionService';\nimport { list as listContributionBoxes } from '../../contributionBoxes/contributionBoxService';\nimport { fillAndDownloadS26 } from '../S26Service'\nimport { fillAndDownloadS30 } from '../S30Service'\nimport MonthTransactionsRow from './MonthTransactionsRow';\nimport { updateTransactionPath } from './UpdateTransactionController';\nimport { monthWarningsPath } from './MonthWarningsController';\nimport { dateBalancePath } from './DateBalanceController';\nimport monthTransactionsSchema from '../schemas/monthTransactionsSchema';\nimport MonthWarningsDialog from './MonthWarningsDialog';\n\nexport const MONTH_TRANSACTIONS_PATH = '/month-transactions/:month';\n\ninterface MonthTransactionsProps {\n  setTitle: (title: string) => void;\n}\n\nexport interface MonthTransactionsParams{\n  month?: string\n}\n\nexport function monthTransactionsPath(month?: string){\n  return MONTH_TRANSACTIONS_PATH.replace(':month', month || thisMonthStr());\n}\n\nconst MonthTransactionsController: FC<MonthTransactionsProps> = ({ setTitle }) => {\n\n  const [working, setWorking] = useState(false);\n  const [transactionSet, setTransactionSet] = useState<TransactionSet|undefined>(undefined);\n  const [endBalance, setEndBalance] = useState<DateBalance|undefined>(undefined);\n  const [warnings, setWarnings] = useState<string[]|undefined>(undefined);\n  const [warningsOpen, setWarningsOpen] = useState(false);\n  const settings = useSettings();\n  const { push } = useHistory();\n  const theme = useTheme();\n  const smUp = useMediaQuery(theme.breakpoints.up('sm'));\n\n  const month = useParams<MonthTransactionsParams>().month as string;\n  const m = moment(month, MONTH_FORMAT).startOf('month');\n  const min = m.format(DATE_FORMAT);\n  const max = m.add(1, 'month').format(DATE_FORMAT);\n\n  setTitle(`${moment(month, MONTH_FORMAT).format(settings.formatting.month_format)} Transactions`);\n\n  useEffect(() => {\n    let mounted = true;\n    setWorking(true);\n    setWarnings(undefined);\n    Promise.all([\n      loadTransactionSet(min, max),\n      loadDateBalance(max),\n      listContributionBoxes()\n    ]).then(([ loadedTransactionSet, endBalance, boxes]) => {\n      if(mounted){\n        setTransactionSet(loadedTransactionSet);\n        setEndBalance(endBalance);\n        monthTransactionsSchema.validate({\n          transactionSet: loadedTransactionSet,\n          settings,\n          boxes\n        }, {\n          abortEarly: false\n        }).then(() => {\n          if(mounted){\n            setWorking(false);\n            setWarnings([]);\n          }\n        }, (err) => {\n          if(mounted){\n            setWorking(false);\n            setWarnings(err.errors);\n          }\n        });\n      }\n    }, (err) => {\n      if(mounted){\n        setWorking(false);\n        setWarnings(err.errors);\n      }\n    })\n    return () => {\n      mounted = false;\n    }\n  }, [month, min, max, settings]);\n\n  function handleMonthChange(delta: number){\n    const newMonth = moment(month, MONTH_FORMAT).add(delta, 'months').format(MONTH_FORMAT);\n    push(monthTransactionsPath(newMonth));\n  }\n\n  function handleWarnings(){\n    if(smUp){\n      setWarningsOpen(true);\n    }else{\n      push(monthWarningsPath(month));\n    }\n  }\n\n  function renderControls(){\n    return (\n      <Grid container spacing={1} justify=\"space-between\">\n        <Grid item>\n          <Button variant=\"contained\" title=\"Previous Month\" style={{minWidth: 40}}\n            onClick={() => handleMonthChange(-1)}>\n            <ArrowLeftIcon />\n          </Button>\n        </Grid>\n        <Grid item>\n          <Box textAlign=\"center\">\n            <Button variant=\"contained\" title=\"Generate S26\" style={{minWidth: 40}}\n              onClick={() => fillAndDownloadS26(transactionSet as TransactionSet, endBalance as DateBalance, settings)}>\n              S26\n            </Button>\n            <Button variant=\"contained\" title=\"Generate S30\" style={{minWidth: 40}}\n              onClick={() => fillAndDownloadS30(transactionSet as TransactionSet, settings)}>\n              S30\n            </Button>\n            <Button variant=\"contained\" title=\"View Warnings\" style={{minWidth: 40}}\n              disabled={!(warnings && warnings.length)}\n              onClick={handleWarnings}>\n              <ErrorIcon />\n              {warnings && !!warnings.length && warnings.length}\n            </Button>\n          </Box>\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" title=\"Next Month\" style={{minWidth: 40}}\n            onClick={() => handleMonthChange(1)}>\n            <ArrowRightIcon />\n          </Button>\n        </Grid>\n      </Grid>\n    )\n  }\n\n  function renderHeaderRow(){\n    return (\n      <Box p={1}>\n        <MonthTransactionsRow\n          receipts={renderHeaderCol('Receipts')}\n          primary={renderHeaderCol('Primary')}\n          other={renderHeaderCol('Other')} />\n      </Box>\n    );\n  }\n\n  function renderHeaderCol(title: string){\n    return (\n      <Box textAlign=\"right\" fontWeight={500}>\n        {title}\n      </Box>\n    )\n  }\n\n  function renderOpeningBalanceRow(){\n    if(!transactionSet){\n      return null;\n    }\n    return (\n      <Box pb={1}>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          onClick={() => push(dateBalancePath(min, month))}>\n          <MonthTransactionsRow\n            description=\"Opening Balance\"\n            receipts={<Money value={transactionSet.start.receipts} />}\n            primary={<Money value={transactionSet.start.primary} />}\n            other={<Money value={transactionSet.start.other} />} />\n        </Button>\n      </Box>\n    );\n  }\n\n  function renderTransactionRows(){\n    if(!transactionSet){\n      return null;\n    }\n    return (\n      transactionSet.transactions.map((transaction) => (\n        <Box key={transaction.id} pb={1}>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            onClick={() => push(updateTransactionPath(transaction.id as number))}>\n            <MonthTransactionsRow\n              description={`${moment(transaction.date, DATE_FORMAT).date()}: ${transaction.description}`}\n              receipts={<Money value={transaction.receipts_amt} />}\n              primary={<Money value={transaction.primary_amt} />}\n              other={<Money value={transaction.other_amt} />} />\n          </Button>\n        </Box>\n      ))\n    );\n  }\n\n\n  function renderClosingBalanceRow(){\n    if(!endBalance){\n      return null;\n    }\n    return (\n      <Box pb={1}>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          onClick={() => push(dateBalancePath(max, month))}>\n          <MonthTransactionsRow\n            description=\"Closing Balance\"\n            receipts={<Money value={endBalance.receipts} fontWeight={500} />}\n            primary={<Money value={endBalance.primary} fontWeight={500} />}\n            other={<Money value={endBalance.other} fontWeight={500} />} />\n        </Button>\n      </Box>\n    );\n  }\n\n  function renderWarningDialog(){\n    if(!smUp || !transactionSet){\n      return null;\n    }\n    return <MonthWarningsDialog\n              working={working}\n              warnings={warnings}\n              open={warningsOpen && smUp}\n              onClose={() => setWarningsOpen(false)} />\n  }\n\n  if(working){\n    return <Loader />\n  }\n\n  return (\n    <Fragment>\n      {renderControls()}\n      {renderHeaderRow()}\n      {renderOpeningBalanceRow()}\n      {renderTransactionRows()}\n      {renderClosingBalanceRow()}\n      {renderWarningDialog()}\n    </Fragment>\n  );\n}\n\nexport default MonthTransactionsController;\n","import { number, object } from 'yup';\nimport contributionBoxSchema from '../contributionBoxes/contributionBoxSchema';\n\nconst NUM = number().integer().min(0).required();\n\nexport default function meetingSchema(){\n  return object().shape({\n    cash: NUM,\n    cheques: NUM,\n    box: contributionBoxSchema().required(),\n  });\n};\n","import { todayStr } from '../utils/date';\nimport Meeting from './Meeting';\nimport { create, newInstance } from '../transactions/transactionService';\nimport TransactionCode from '../transactions/types/TransactionCode';\nimport addErr from '../utils/Err';\nimport meetingSchema from './MeetingSchema';\nimport { loadSettings } from '../settings/SettingsService';\nimport { list as listContributionBoxes } from '../contributionBoxes/contributionBoxService';\n\nexport function newMeeting(date = todayStr()) {\n  return new Promise<Meeting>((resolve, reject) => {\n    loadSettings().then((settings) => {\n      listContributionBoxes().then((boxes) => {\n        resolve({\n          date,\n          settings,\n          boxes: boxes.map(box => {\n            return {\n              cash: 0,\n              cheques: 0,\n              box\n            }\n          }),\n        });\n      }, reject);\n    }, reject)\n  });\n\n}\n\nexport function createMeeting(meeting: Meeting){\n  return new Promise<Meeting>((resolve, reject) => {\n\n    function handleReject(err: any){\n      addErr(err);\n      reject(err);\n    }\n\n    meetingSchema().validate(meeting).then(() => {\n      const { date } = meeting;\n\n      function initTransaction(code: TransactionCode, description: string, cash?: number, cheques?: number){\n        const transaction = newInstance(description, date, code);\n        transaction.cash = cash || 0;\n        transaction.cheques = cheques || 0;\n        transaction.receipts_amt = transaction.cash + transaction.cheques;\n        return create(transaction);\n      }\n\n      Promise.all(meeting.boxes.map((box) =>\n        initTransaction(box.box.code, box.box.title, box.cash, box.cheques)\n      )).then(() => resolve(meeting), handleReject);\n    }, handleReject);\n  });\n}\n","import { array, object } from 'yup';\nimport { dateStr } from '../utils/schemas';\nimport contributionBoxContributionsSchema from './contributionBoxContributionsSchema';\n\nexport default function meetingSchema(){\n  return object().shape({\n    date: dateStr.required(),\n    special_contribution_boxes: array().of(contributionBoxContributionsSchema().required()),\n  });\n};\n","import React, { Fragment, FC, FormEvent, ReactNode, useState } from 'react';\nimport { Box, Divider, Grid, Typography } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport DateSelect from '../../utils/components/DateSelect';\nimport Loader from '../../utils/components/Loader';\nimport MoneyInput from '../../utils/money/MoneyInput';\nimport Money from '../../utils/money/Money';\n\nimport Meeting from '../Meeting';\nimport ContributionBoxContributions from '../ContributionBoxContributions';\n\nexport interface MeetingFormProps{\n  meeting: Meeting;\n  onSubmit: (meeting: Meeting) => void;\n  working: boolean;\n}\n\nconst MeetingForm: FC<MeetingFormProps> = ({ meeting, onSubmit, working }) => {\n\n  const [internalMeeting, setInternalMeeting] = useState(meeting);\n  const { boxes } = internalMeeting;\n\n  const totalCash = boxes.reduce((sum, box) => {\n    return sum + box.cash\n  }, 0);\n  const totalCheques = boxes.reduce((sum, box) => {\n    return sum + box.cheques\n  }, 0);\n\n  function renderRowLayout(label: string, cash: ReactNode, cheques: ReactNode, total: ReactNode, divider = false){\n    return (\n      <Fragment>\n        <Box p={2} pt={0} pb={1}>\n          <Grid container spacing={1} alignItems=\"center\">\n            <Grid item xs={12} sm>\n              {label}\n            </Grid>\n            <Grid item xs={4} sm={2}>\n              {cash}\n            </Grid>\n            <Grid item xs={4} sm={2}>\n              {cheques}\n            </Grid>\n            <Grid item xs={4} sm={2}>\n              {total}\n            </Grid>\n          </Grid>\n        </Box>\n        {divider && <Divider />}\n      </Fragment>\n    );\n  }\n\n  function renderHeader(){\n    return renderRowLayout('',\n          <Typography style={{fontWeight: 500, textAlign: 'right'}}>Cash</Typography>,\n          <Typography style={{fontWeight: 500, textAlign: 'right'}}>Cheques</Typography>,\n          <Typography style={{fontWeight: 500, textAlign: 'right'}}>Total</Typography>);\n  }\n\n  function renderRow(label: string,\n       cash: number|undefined,\n       onCashChange: (newCash: number|undefined) => void,\n       cheques: number|undefined,\n       onChequesChange: (newCheques: number|undefined) => void){\n    const total = cash as number + (cheques as number);\n    return renderRowLayout(label,\n        <MoneyInput value={cash} onChange={onCashChange} required />,\n        <MoneyInput value={cheques} onChange={onChequesChange} required />,\n        !Number.isNaN(total) && <Money value={total} />,\n        true);\n  }\n\n  function renderBoxes(){\n    return boxes.map((box, index) => (\n        <Grid item key={index}>\n          {renderRow(box.box.title, box.cash,\n            (value?: number) => handleBox({...box, cash: value as number}, index),\n            box.cheques,\n            (value?: number) => handleBox({...box, cheques: value as number}, index),\n          )}\n        </Grid>\n    ));\n  }\n\n  function handleBox(box: ContributionBoxContributions, index: number){\n    const boxes = internalMeeting.boxes.slice();\n    boxes[index] = box;\n    setInternalMeeting({...internalMeeting, boxes});\n  }\n\n  function handleSubmit(event: FormEvent<HTMLFormElement>){\n    event.preventDefault();\n    onSubmit(internalMeeting);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container direction=\"column\" spacing={1}>\n        <Grid item>\n          <DateSelect\n            required\n            value={internalMeeting.date}\n            onChange={date => setInternalMeeting({ ...internalMeeting, date: date as string })}\n            label=\"Date\" />\n        </Grid>\n        <Grid item>\n          {renderHeader()}\n        </Grid>\n        {renderBoxes()}\n        <Grid item>\n          {renderRowLayout('Total',\n            <Money value={totalCash} />,\n            <Money value={totalCheques} />,\n            <Money value={totalCash + totalCheques} />)}\n        </Grid>\n        <Grid item>\n          {working ?\n            <Loader />\n            :\n            <Grid container justify=\"flex-end\">\n              <Grid item xs sm=\"auto\">\n                <Button\n                  fullWidth\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\">\n                  <AddIcon />\n                  Add Meeting\n                </Button>\n              </Grid>\n            </Grid>\n          }\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\n\nexport default MeetingForm;\n","import React, { FC, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { monthTransactionsPath } from '../../transactions/components/MonthTransactionsController';\n\nimport Loader from '../../utils/components/Loader';\nimport { dateToMonth } from '../../utils/date';\nimport Meeting from '../Meeting'\nimport { newMeeting, createMeeting } from '../MeetingService';\nimport MeetingForm from './MeetingForm'\n\n\nexport const CREATE_MEETING_PATH = '/create-meeting';\n\nexport interface CreateMeetingControllerProps{\n  setTitle: (title: string) => void;\n}\n\nconst CreateMeetingController: FC<CreateMeetingControllerProps> = ({ setTitle }) => {\n\n  setTitle('Add Meeting');\n  const { push } = useHistory();\n  const [working,setWorking] = useState(false);\n  const [meeting, setMeeting] = useState<Meeting|undefined>(undefined);\n\n  useEffect(() => {\n    let mounted = true;\n    setWorking(true);\n    newMeeting().then((meeting) => {\n      if(mounted){\n        setMeeting(meeting);\n        setWorking(false);\n      }\n    }, () => {\n      if(mounted){\n        setWorking(false)\n      }\n    });\n    return () => {\n      mounted = false;\n    }\n  }, []);\n\n  function handleSubmit(meeting: Meeting){\n    setWorking(true);\n    createMeeting(meeting).then(() => {\n      setWorking(false)\n      push(monthTransactionsPath(dateToMonth(meeting.date)));\n    }, () => setWorking(false));\n  }\n\n  if(working && (!meeting)){\n    return <Loader />\n  }\n\n  if(!meeting){\n    return null;\n  }\n\n  return <MeetingForm\n           meeting={meeting}\n           onSubmit={handleSubmit}\n           working={working} />\n}\n\nexport default CreateMeetingController;\n","import { number, object, StringSchema } from 'yup';\nimport Deposit from './Deposit';\nimport { dateStr } from '../utils/schemas';\n\ninterface YupContext{\n  path: any;\n  createError: any;\n}\n\nconst NUM = number().integer().min(0).required();\n\nexport default function transactionSchema(){\n  return object().shape({\n    date: dateStr.required(),\n    apply_on_date: dateStr.required().when(['date'],\n      (date: string, schema: StringSchema) => {\n        return schema.test(\n          'apply_on_date_gt_date',\n          'Applied date should be the same as or later than date',\n          (apply_on_date: string) => {\n            return apply_on_date >= date;\n          })\n      }\n    ),\n    cash: NUM,\n    cheques: NUM,\n  }).test('transaction-month-year-match',\n    'Deposit Total should not be 0',\n    function(this: YupContext, deposit: Deposit) {\n      return deposit.cash > 0 || deposit.cheques > 0\n    }\n  );\n};\n","import moment from 'moment';\nimport Deposit from './Deposit';\nimport { create, loadTransactionSet } from '../transactions/transactionService';\nimport TransactionCode from '../transactions/types/TransactionCode';\nimport addErr from '../utils/Err';\nimport DepositSchema from './DepositSchema';\n\nimport { DATE_FORMAT, todayStr } from '../utils/date';\n\nfunction delta(sum: number, receipts: number, amt?: number){\n  if(amt){\n    if(receipts > 0){\n      return sum += amt;\n    }else{\n      return sum -= amt;\n    }\n  }\n  return sum;\n}\n\nexport function newDeposit(date = todayStr()) {\n  return new Promise<Deposit>((resolve, reject) => {\n    const min = moment(date, DATE_FORMAT).startOf('month');\n    loadTransactionSet(min.format(DATE_FORMAT), date).then((transactionSet) => {\n      const cash = transactionSet.transactions\n        .reduce((sum: number, transaction) => delta(sum, transaction.receipts_amt, transaction.cash), 0);\n      const cheques = transactionSet.transactions\n        .reduce((sum: number, transaction) => delta(sum, transaction.receipts_amt, transaction.cheques), 0);\n      resolve({ date, apply_on_date: date, cash, cheques });\n    }, reject);\n  });\n}\n\nexport function createDeposit(deposit: Deposit){\n  return new Promise<Deposit>((resolve, reject) => {\n    DepositSchema().validate(deposit).then(() => {\n      const { date, cash, cheques} = deposit;\n      const amt = cash + cheques\n      create({ date, apply_on_date: date, description: 'Deposit',\n          code: TransactionCode.D, cash, cheques, receipts_amt: -amt,\n          primary_amt: amt, other_amt: 0 })\n        .then(() => resolve(deposit), reject);\n    }, (err: any) => {\n      addErr(err);\n      reject(err);\n    });\n  });\n}\n","import React, { FC, FormEvent, useState } from 'react';\nimport { Box, Button, Grid } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport Loader from '../../utils/components/Loader';\nimport Deposit from '../Deposit'\nimport { newDeposit } from '../DepositService';\n\nimport MoneyInput from '../../utils/money/MoneyInput';\nimport Money from '../../utils/money/Money';\nimport DateSelect from '../../utils/components/DateSelect';\n\nexport interface DepositFormProps{\n  deposit: Deposit;\n  onSubmit: (deposit: Deposit) => void;\n  working: boolean;\n}\n\nconst DepositForm: FC<DepositFormProps> = ({ deposit, onSubmit, working }) => {\n\n  const [internalDeposit, setInternalDeposit] = useState(deposit);\n  const {cash, cheques } = internalDeposit;\n  const total = cash + cheques;\n\n  function handleSubmit(event: FormEvent<HTMLFormElement>){\n    event.preventDefault();\n    onSubmit(internalDeposit);\n  }\n\n  function handleDateChange(date?: string){\n    setInternalDeposit({ ...internalDeposit, date: date as string })\n    newDeposit(date).then((deposit) => {\n      setInternalDeposit(deposit);\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <DateSelect\n            required\n            value={internalDeposit.date}\n            onChange={handleDateChange}\n            label=\"Date\" />\n        </Grid>\n        <Grid item xs={6}>\n          <DateSelect\n            required\n            value={internalDeposit.apply_on_date as string}\n            onChange={(apply_on_date?: string) => {\n              setInternalDeposit({ ...internalDeposit, apply_on_date: (apply_on_date as string) });\n            }}\n            label=\"Applicable Date\" />\n        </Grid>\n        <Grid item xs={6}>\n          <MoneyInput\n            label=\"Cash\"\n            required\n            value={cash}\n            onChange={(newCash) => setInternalDeposit({ ...internalDeposit, cash: newCash as number })} />\n        </Grid>\n        <Grid item xs={6}>\n          <MoneyInput\n            label=\"Cheques\"\n            required\n            value={cheques}\n            onChange={(newCheques) => setInternalDeposit({ ...internalDeposit, cheques: newCheques as number })} />\n        </Grid>\n        <Grid item xs={12}>\n          <Box p={2}>\n            <Grid container justify=\"flex-end\" spacing={1}>\n              <Grid item>\n                Total:\n              </Grid>\n              <Grid item>\n                <Money value={total} />\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box p={2} pl={0} pr={0}>\n            <Grid container justify=\"flex-end\" spacing={1}>\n              <Grid item xs sm=\"auto\">\n              {working ?\n                <Loader />\n                :\n                <Button\n                  fullWidth\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\">\n                  <AddIcon />\n                  Add Deposit\n                </Button>\n              }\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\n\nexport default DepositForm;\n","import React, { FC, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { monthTransactionsPath } from '../../transactions/components/MonthTransactionsController';\n\nimport { dateToMonth } from '../../utils/date';\nimport Loader from '../../utils/components/Loader';\nimport Deposit from '../Deposit';\nimport { newDeposit, createDeposit } from '../DepositService';\nimport DepositForm from './DepositForm'\n\n\nexport const CREATE_DEPOSIT_PATH = '/create-deposit';\n\nexport interface CreateDepositControllerProps{\n  setTitle: (title: string) => void;\n}\n\nconst CreateDepositController: FC<CreateDepositControllerProps> = ({ setTitle }) => {\n\n  setTitle('Add Deposit');\n  const { push } = useHistory();\n  const [working,setWorking] = useState(false);\n  const [deposit,setDeposit] = useState<undefined|Deposit>(undefined);\n\n  useEffect(() => {\n    let mounted = true;\n    setWorking(true);\n    newDeposit().then((deposit) => {\n      if(mounted){\n        setDeposit(deposit);\n        setWorking(false);\n      }\n    }, () => {\n      if(mounted){\n        setWorking(false)\n      }\n    });\n    return () => {\n      mounted = false;\n    }\n  }, []);\n\n  function handleSubmit(deposit: Deposit){\n    setWorking(true);\n    createDeposit(deposit).then(() => {\n      setWorking(false)\n      push(monthTransactionsPath(dateToMonth(deposit.date)));\n    }, () => setWorking(false));\n  }\n\n  if(working && !deposit){\n    return <Loader />\n  }\n\n  if(!deposit){\n    return null; // error should have been thrown\n  }\n\n  return (\n    <DepositForm\n      deposit={deposit as Deposit}\n      onSubmit={handleSubmit}\n      working={working} />\n  )\n}\n\nexport default CreateDepositController;\n","\nimport db from '../utils/db';\nimport TransactionBreakdown from '../transactions/types/TransactionBreakdown';\nimport TransactionBreakdownCode, { describeTransactionBreakdownCodeShort } from '../transactions/types/TransactionBreakdownCode';\nimport transactionBreakdownSchema from '../transactions/schemas/transactionBreakdownSchema';\n\ndb.version(1).stores({\n  transaction_breakdowns: '++id'\n})\n\ndb.on(\"populate\", () => {\n  [ TransactionBreakdownCode.WW_RESOLUTION,\n    TransactionBreakdownCode.KHAHC,\n    TransactionBreakdownCode.GAA,\n    TransactionBreakdownCode.COAA,\n  ].forEach(code => {\n    (db as any).transaction_breakdowns.add({\n      code,\n      description: describeTransactionBreakdownCodeShort(code),\n      amt: 0,\n    });\n  })\n});\n\nfunction table(){\n  return db.table<TransactionBreakdown>('transaction_breakdowns');\n}\n\nexport function list(){\n  return table().toArray();\n}\n\n\nexport function restore(breakdowns: TransactionBreakdown[]){\n  return new Promise((resolve, reject) => {\n    Promise.all(breakdowns.map(breakdown => transactionBreakdownSchema().validate(breakdown))).then(() => {\n      list().then((oldBreakdowns) => {\n        table().bulkDelete(oldBreakdowns.map(box => box.id as number)).then(()=> {\n          table().bulkAdd(breakdowns).then(resolve, reject);\n        }, reject);\n      }, reject);\n    }, reject);\n  });\n}\n","import Transaction from './types/Transaction';\nimport TransactionBreakdown from './types/TransactionBreakdown';\nimport TransactionBreakdownCode from './types/TransactionBreakdownCode';\n\nimport { loadSettings, currentDateStr } from '../settings/SettingsService';\n\nimport { toMoneyS } from '../utils/money/service';\nimport { fillAndDownloadPdf } from '../utils/pdf';\n\n\nfunction getWithCode(breakdown: TransactionBreakdown[]|undefined, code?: TransactionBreakdownCode){\n  if(!breakdown){\n    return [''];\n  }\n  return [toMoneyS(breakdown.reduce((sum, b) => {\n    return sum + ((b.code === code && b.amt) ? b.amt : 0);\n  }, 0))];\n}\n\nfunction truncate(str: string, len: number){\n  return str.length <= len ? str : str.substring(len) + '...';\n}\n\nexport async function fillAndDownloadTO62(transaction: Transaction){\n  const { breakdown } = transaction;\n  const settings = await loadSettings();\n\n  const total = breakdown ? breakdown.reduce((sum, b) => sum + (b.amt || 0), 0): 0;\n\n  await fillAndDownloadPdf('/pdf/TO-62-E.pdf', {\n    '900_1_CheckBox': [true], // Type congregation\n    '900_5_CheckBox': [!!transaction.confirmation_code], // Type Automatic Transfer\n    '900_4_Text': [settings.congregation_name], // congregation name (from settings)\n\n    '901_1_TO62Donate': getWithCode(breakdown, TransactionBreakdownCode.WW_BOX),\n    '901_2_TO62Donate': getWithCode(breakdown, TransactionBreakdownCode.WW_RESOLUTION),\n    '901_3_TO62Donate': getWithCode(breakdown, TransactionBreakdownCode.KHAHC),\n    '901_4_TO62Donate': getWithCode(breakdown, TransactionBreakdownCode.GAA),\n    '901_5_TO62Donate': getWithCode(breakdown, TransactionBreakdownCode.COAA),\n\n    // '901_6_TO62Donate': ['7'], //Payment of Charges on Account\n    // '901_7_TO62Donate': ['8'], //Video Equipment (Resolution)\n    '901_8_TO62Donate': getWithCode(breakdown, undefined),\n    '900_8_Text': [breakdown ?\n        truncate(breakdown\n          .filter(b => !b.code)\n          .map(b => b.description)\n          .join(' / ')\n        , 55)\n       : ''],\n\n    '900_9_Text': [transaction.confirmation_code || ''],\n    '901_9_TO62TotalDonate': [toMoneyS(total)],\n    // '901_10_TO62Funds': ['14'], // send funds to be kept with branch office (Using branch as bank?)\n    '901_11_TO62TotalFunds': [toMoneyS(total)], //Total (Including send funds)\n    // '901_12_TO62Funds': ['18'], // request funds be kept with branch office\n    '900_10_Text': [currentDateStr(settings)], // Transaction Date\n    '900_11_Text_C': [transaction.confirmation_code || ''], // confirmation number 1\n    //'900_12_Text_C': ['17'], // confirmation number 2\n    '900_13_Text_C': [settings.accounts_servant_or_overseer], // Accounts servant or overseer\n    '900_14_Text_C': [settings.authorized_signer], // authorized signer\n  });\n}\n","import moment from 'moment';\nimport TransferToBranch from './TransferToBranch';\nimport { DATE_FORMAT, todayStr } from '../utils/date';\nimport Transaction from '../transactions/types/Transaction';\nimport { create, list as listTransactions } from '../transactions/transactionService';\nimport TransactionBreakdown from '../transactions/types/TransactionBreakdown';\nimport TransactionBreakdownCode from '../transactions/types/TransactionBreakdownCode';\nimport * as transferToBranchDAO from './transferToBranchDAO';\nimport TransactionCode, { isLocalCongregation } from '../transactions/types/TransactionCode';\nimport addErr from '../utils/Err';\nimport { addMsg } from '../utils/msgs/service';\nimport TransferToBranchSchema from './TransferToBranchSchema';\nimport { fillAndDownloadTO62 } from '../transactions/TO62Service';\n\nexport function newTransferToBranch(apply_on_date = todayStr()) {\n  return new Promise<TransferToBranch>((resolve, reject) => {\n    const m = moment(apply_on_date, DATE_FORMAT).startOf('month');\n    const date_max = m.format(DATE_FORMAT);\n    const date = m.clone().add(-1, 'days').format(DATE_FORMAT);\n    const date_min = m.add(-1, 'month').format(DATE_FORMAT);\n    Promise.all([listTransactions({ date_min, date_max }), transferToBranchDAO.list()])\n      .then(([transactions, defaultBreakdown]) => {\n      const wwBox = transactions.reduce(\n        (sum: number, transaction: Transaction) => {\n          let delta = (isLocalCongregation(transaction.code) === false) ? transaction.receipts_amt : 0;\n          if(transaction.code === TransactionCode.CBT && transaction.breakdown){\n            delta += transaction.breakdown.reduce((sum, breakdown) => {\n              const delta = (breakdown.amt && breakdown.code === TransactionBreakdownCode.WW_BOX) ? breakdown.amt : 0;\n              return sum - delta;\n            }, 0);\n          }\n          return sum + delta;\n        }, 0);\n\n      const idOffset = new Date().getTime();\n      const breakdown = defaultBreakdown.map((item, index) => {\n        return { ...item, id: idOffset + index }\n      });\n\n      breakdown.splice(0, 0, { id: idOffset - 1,\n        description: 'WW (from box)',\n        code: TransactionBreakdownCode.WW_BOX,\n        amt: wwBox });\n\n      resolve({\n        date,\n        apply_on_date,\n        confirmation_code: '',\n        breakdown\n      });\n\n    }, reject);\n  });\n}\n\n\nexport function loadDefaultBreakdown(){\n  return transferToBranchDAO.list();\n}\n\nexport function storeDefaultBreakdown(breakdowns: TransactionBreakdown[]){\n  return transferToBranchDAO.restore(breakdowns).then(() => {\n    addMsg('Default Transfer Breakdown Updated');\n  }, (err) => {\n    addErr(err);\n  })\n}\n\nexport function toTransaction(transferToBranch: TransferToBranch){\n  return new Promise<Transaction>((resolve, reject) => {\n    TransferToBranchSchema().validate(transferToBranch).then(() => {\n      const { date, apply_on_date, breakdown, confirmation_code } = transferToBranch;\n      const description = `To Branch - ${confirmation_code} (${apply_on_date})`;\n      const amt = breakdown.reduce(((sum: number, item: TransactionBreakdown) => (item.amt as number) + sum), 0);\n      resolve({ date, apply_on_date, description,\n        code: TransactionCode.CBT, receipts_amt: 0, primary_amt: -amt,\n        other_amt: 0, breakdown, confirmation_code,\n      });\n    }, (err: any) => {\n      addErr(err);\n      reject(err);\n    });\n  });\n}\n\nexport function createTransferToBranch(transferToBranch: TransferToBranch){\n  return new Promise<TransferToBranch>((resolve, reject) => {\n    toTransaction(transferToBranch).then((transaction) => {\n      create(transaction).then(() => resolve(transferToBranch), reject)\n    }, reject);\n  });\n}\n\n\nexport async function fillAndDownloadTO62ForTransfer(transferToBranch: TransferToBranch){\n  transferToBranch = { ...transferToBranch, confirmation_code: transferToBranch.confirmation_code || ' ' } // Confirmation code required for save, but not for TO-62\n  const transaction = await toTransaction(transferToBranch);\n  const pdf = fillAndDownloadTO62(transaction);\n  return pdf;\n}\n","import { array, number, object, string, StringSchema } from 'yup';\nimport { dateStr } from '../utils/schemas';\n\nexport default function TransferToBranchSchema(){\n  return object().shape({\n    date: dateStr.required(),\n    apply_on_date: dateStr.required().when(['date'],\n      (date: string, schema: StringSchema) => {\n        return schema.test(\n          'apply_on_date_gt_date',\n          'Applied date should be the same as or later than date',\n          (apply_on_date: string) => {\n            return !apply_on_date || apply_on_date >= date;\n          })\n      }\n    ),\n    confirmation_code: string().required(),\n    breakdown: array().min(1).of(\n      object().shape({\n        description: string().required(),\n        amt: number().integer().min(0, 'All Amounts must be 0 or Greater').required()\n      })\n    ).required()\n  });\n};\n","import React, { ChangeEvent, FC, FormEvent, useState } from 'react';\nimport { Box, Grid, TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport Loader from '../../utils/components/Loader';\nimport TransferToBranch from '../TransferToBranch'\nimport { fillAndDownloadTO62ForTransfer } from '../TransferToBranchService';\n\nimport BreakdownList from '../../transactions/components/BreakdownList';\n\nimport DateSelect from '../../utils/components/DateSelect';\n\nexport interface TransferToBranchFormProps{\n  transfer: TransferToBranch;\n  onSubmit: (transfer: TransferToBranch) => void;\n  working: boolean;\n}\n\nconst TransferToBranchForm: FC<TransferToBranchFormProps> = ({ transfer, onSubmit, working }) => {\n\n  const [internalTransfer, setInternalTransfer] = useState(transfer);\n\n  function handleSubmit(event: FormEvent<HTMLFormElement>){\n    event.preventDefault();\n    onSubmit(internalTransfer);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container spacing={1} justify=\"space-between\" alignItems=\"center\">\n        <Grid item xs={12} sm>\n          <DateSelect\n            required\n            value={internalTransfer.date}\n            onChange={date => setInternalTransfer({ ...internalTransfer, date: date as string })}\n            label=\"Date\" />\n        </Grid>\n        <Grid item xs={12} sm>\n        <DateSelect\n          required\n          value={internalTransfer.apply_on_date}\n          onChange={apply_on_date => setInternalTransfer({ ...internalTransfer, apply_on_date: apply_on_date as string })}\n          label=\"Apply on Date\" />\n        </Grid>\n        <Grid item xs={12} md>\n          <TextField\n            required\n            fullWidth\n            label=\"Confirmation Code\"\n            variant=\"outlined\"\n            value={internalTransfer.confirmation_code}\n            onChange={(event: ChangeEvent<HTMLInputElement>) =>\n              setInternalTransfer({ ...internalTransfer, confirmation_code: event.target.value})} />\n        </Grid>\n        <Grid item xs={12}>\n          <BreakdownList breakdowns={internalTransfer.breakdown}\n            onChange={breakdown => setInternalTransfer({ ...internalTransfer, breakdown })} />\n        </Grid>\n        <Grid item xs={12}>\n          <Box p={2} pl={0} pr={0}>\n            <Grid container justify=\"flex-end\" spacing={1}>\n              <Grid item xs={12} sm=\"auto\">\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  onClick={() => fillAndDownloadTO62ForTransfer(internalTransfer)}>\n                  Generate TO-62\n                </Button>\n              </Grid>\n              <Grid item xs={12} sm=\"auto\">\n                {working ?\n                  <Loader />\n                  :\n                  <Button\n                    fullWidth\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\">\n                    <AddIcon />\n                    Add Transfer\n                  </Button>\n                }\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\n\nexport default TransferToBranchForm;\n","import React, { FC, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { monthTransactionsPath } from '../../transactions/components/MonthTransactionsController';\n\nimport Loader from '../../utils/components/Loader';\nimport TransferToBranch from '../TransferToBranch';\nimport { newTransferToBranch, createTransferToBranch } from '../TransferToBranchService';\nimport TransferToBranchForm from './TransferToBranchForm'\n\n\nexport const CREATE_TRANSFER_PATH = '/create-transfer';\n\nexport interface CreateTransferToBranchControllerProps{\n  setTitle: (title: string) => void;\n}\n\nconst CreateTransferToBranchController: FC<CreateTransferToBranchControllerProps> = ({ setTitle }) => {\n\n  setTitle('Add Transfer To Branch');\n  const { push } = useHistory();\n  const [working,setWorking] = useState(false);\n  const [transfer,setTransfer] = useState<undefined|TransferToBranch>(undefined);\n\n  useEffect(() => {\n    let mounted = true;\n    setWorking(true);\n    newTransferToBranch().then((transferToBranch) => {\n      if(mounted){\n        setTransfer(transferToBranch);\n        setWorking(false);\n      }\n    }, () => {\n      if(mounted){\n        setWorking(false)\n      }\n    });\n    return () => {\n      mounted = false;\n    }\n  }, []);\n\n  function handleSubmit(transferToBranch: TransferToBranch){\n    setWorking(true);\n    createTransferToBranch(transferToBranch).then(() => {\n      setWorking(false)\n      push(monthTransactionsPath(transferToBranch.date));\n    }, () => setWorking(false));\n  }\n\n  if(working && !transfer){\n    return <Loader />\n  }\n\n  if(!transfer){\n    return null; // error should have been thrown\n  }\n\n  return (\n    <TransferToBranchForm\n      transfer={transfer as TransferToBranch}\n      onSubmit={handleSubmit}\n      working={working} />\n  )\n}\n\nexport default CreateTransferToBranchController;\n","import React, { FC, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { dateToMonth } from '../../utils/date';\nimport Loader from '../../utils/components/Loader';\nimport TransactionForm from './TransactionForm'\nimport Transaction from '../types/Transaction';\nimport { newInstance, create } from '../transactionService';\nimport { monthTransactionsPath } from './MonthTransactionsController';\n\nexport const CREATE_TRANSACTION_PATH = '/create-transaction';\n\nexport interface CreateTransactionControllerProps{\n  setTitle: (title: string) => void;\n}\n\nconst CreateTransactionController: FC<CreateTransactionControllerProps> = ({ setTitle }) => {\n  setTitle('Add Transaction');\n  const { push } = useHistory();\n  const [working,setWorking] = useState(false);\n\n  function handleSave(transaction: Transaction){\n    setWorking(true);\n    return new Promise<Transaction>((resolve, reject) => {\n      create(transaction).then(() => {\n        resolve();\n        push(monthTransactionsPath(dateToMonth(transaction.date)));\n      }, (err: any) => {\n        setWorking(false);\n        reject(err);\n      });\n    });\n  }\n\n  return (\n    <TransactionForm\n      transaction={newInstance('')}\n      onSubmit={handleSave}>\n      {working ? <Loader /> :\n        <Button\n          fullWidth\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\">\n          <AddIcon />\n          Add Transaction\n        </Button>\n      }\n    </TransactionForm>\n  )\n}\n\nexport default CreateTransactionController;\n","import React, { FC } from 'react';\nimport { Box, Button, Grid } from '@material-ui/core';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nexport interface YearSelectProps{\n  onPrev: () => void;\n  onNext: () => void;\n}\n\nconst SerialNavigation: FC<YearSelectProps> = ({ onPrev, onNext, children}) => {\n  const theme = useTheme();\n  const smUp = useMediaQuery(theme.breakpoints.up('sm'));\n  return (\n    <Grid container justify=\"space-between\" alignItems=\"center\" spacing={1}>\n      <Grid item>\n        <Button variant=\"contained\" onClick={onPrev}>\n          <NavigateBeforeIcon />\n          {smUp && \"Previous\"}\n        </Button>\n      </Grid>\n      <Grid item xs>\n        <Box textAlign=\"center\">\n          {children}\n        </Box>\n      </Grid>\n      <Grid item>\n        <Button variant=\"contained\" onClick={onNext}>\n          {smUp && \"Next\"}\n          <NavigateNextIcon />\n        </Button>\n      </Grid>\n    </Grid>\n  )\n}\n\n\nexport default SerialNavigation;\n","import React, { FC } from 'react';\nimport moment from 'moment';\nimport { Box, Button, Grid } from '@material-ui/core';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { MONTH_FORMAT, thisYear } from '../utils/date';\nimport SerialNavigation from '../utils/components/SerialNavigation';\nimport useSettings from '../settings/useSettings';\nimport { monthTransactionsPath } from '../transactions/components/MonthTransactionsController';\n\nexport const MONTH_LIST_PATH = \"/months/:year\";\n\nexport function monthListPath(year = thisYear()){\n  return MONTH_LIST_PATH.replace(':year', year.toString());\n}\n\ninterface MonthListProps{\n  setTitle: (title: string) => void;\n}\n\ninterface MonthListParams {\n  year?: string;\n}\n\nconst MonthListController: FC<MonthListProps> = ({ setTitle }) => {\n  setTitle('Select Month');\n  const { push } = useHistory();\n  const settings = useSettings();\n  const year = parseInt(useParams<MonthListParams>().year as any) || moment().year();\n\n  function handleMonth(month: string){\n    push(monthTransactionsPath(month));\n  }\n\n  function handleYear(newYear: number){\n    push(monthListPath(newYear));\n  }\n\n  function renderMonths(){\n    const months = [];\n    for(var i = 0; i < 12; i++){\n      months.push(renderMonth(i));\n    }\n    return months;\n  }\n\n  function renderMonth(month: number){\n    const m = moment().year(year).month(month);\n    const monthStr = m.format(MONTH_FORMAT);\n    return (\n      <Grid item key={monthStr}>\n        <Button fullWidth variant=\"contained\" onClick={() => handleMonth(monthStr)}>\n          {m.format(settings.formatting.month_format)}\n        </Button>\n      </Grid>\n    )\n  }\n\n  return (\n    <Grid container direction=\"column\" spacing={1}>\n      <Grid item>\n        <SerialNavigation onPrev={() => handleYear(year - 1)} onNext={() => handleYear(year + 1)} >\n          <Box textAlign=\"center\">\n            {year}\n          </Box>\n        </SerialNavigation>\n      </Grid>\n      {renderMonths()}\n    </Grid>\n  )\n}\n\nexport default MonthListController;\n","import React, { ChangeEvent, FC, FocusEvent, KeyboardEvent, useState } from 'react';\nimport { TextField } from '@material-ui/core';\n\nexport interface IIntInputProps {\n  name?: string;\n  label?: string;\n  value?: number;\n  onChange: (value?: number) => void;\n  error?: boolean;\n  helperText?: string;\n  required?: boolean;\n}\n\nconst IntInput: FC<IIntInputProps> = ({ name, label, value, onChange, error, helperText, required}) => {\n\n  if(required && error === undefined){\n    error = (value == null);\n  }\n\n  const [internalValue, setInternalValue] = useState((value == null) ? '' : value.toString());\n  const [prevValue, setPrevValue] = useState(value);\n\n  if(value !== prevValue){\n    setInternalValue((value == null) ? '' : value.toString());\n    setPrevValue(value);\n  }\n\n  function handleChange(){\n    const newInternalValue = internalValue.length ? parseInt(internalValue) : (required ? 0 : undefined);\n    setInternalValue((newInternalValue == null) ? '' : newInternalValue.toString());\n    onChange(newInternalValue);\n  }\n\n  return <TextField\n    name={name}\n    label={label}\n    fullWidth\n    type=\"number\"\n    variant=\"outlined\"\n    value={internalValue}\n    error={error}\n    helperText={helperText}\n    required={required}\n    onChange={(event: ChangeEvent<HTMLInputElement>) => setInternalValue(event.target.value)}\n    onFocus={(event: FocusEvent<HTMLInputElement>) => event.target.select()}\n    onBlur={() => handleChange()}\n    onKeyDown={(event: KeyboardEvent) => {\n      if(event.key === 'Enter'){\n        handleChange()\n      }\n    }} />\n}\n\nexport default IntInput;\n","import React, { ChangeEvent, FC, FormEvent, Fragment } from 'react';\nimport { Box, Button, Checkbox, Divider, FormControlLabel, Grid, TextField, Typography } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport moment from 'moment';\n\nimport Settings from '../Settings';\nimport IntInput from '../../utils/components/IntInput';\n\nexport interface SettingsFormProps{\n  settings: Settings;\n  onChange: (settings: Settings) => void;\n  onSubmit?: (settings: Settings) => void;\n}\n\nconst SettingsForm: FC<SettingsFormProps> = ({ settings, onChange, onSubmit }) => {\n\n  function handleSubmit(event: FormEvent){\n    if(onSubmit){\n      event.preventDefault();\n      onSubmit(settings);\n    }\n  }\n\n  function renderGeneralInfo(){\n    return (\n      <Fragment>\n        <Typography variant=\"h6\">General Information</Typography>\n        <Divider />\n        <Box pt={2} pb={2}>\n          <Grid container spacing={1} alignItems=\"center\">\n            <Grid item xs={12} sm={6} md={4}>\n              <TextField fullWidth variant=\"outlined\" label=\"Congregation Name\" value={settings.congregation_name}\n                onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                  onChange({...settings, congregation_name: event.target.value})} />\n            </Grid>\n            <Grid item xs={12} sm={6} md={4}>\n              <TextField fullWidth variant=\"outlined\" label=\"City\" value={settings.city}\n                onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                  onChange({...settings, city: event.target.value})} />\n            </Grid>\n            <Grid item xs={12} sm={6} md={4}>\n              <TextField fullWidth variant=\"outlined\" label=\"Province or State\" value={settings.province_or_state}\n                onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                  onChange({...settings, province_or_state: event.target.value})} />\n            </Grid>\n            <Grid item xs={12} sm={6} md={4}>\n              <TextField fullWidth variant=\"outlined\" label=\"Accounts Servant or Overseer\" value={settings.accounts_servant_or_overseer}\n                onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                  onChange({...settings, accounts_servant_or_overseer: event.target.value})} />\n            </Grid>\n            <Grid item xs={12} sm={6} md={4}>\n              <TextField fullWidth variant=\"outlined\" label=\"Authorized Signer\" value={settings.authorized_signer}\n                onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                  onChange({...settings, authorized_signer: event.target.value})} />\n            </Grid>\n            <Grid item xs={12} sm={6} md={4}>\n              <TextField fullWidth variant=\"outlined\" label=\"Other Account Description\" value={settings.other_account_description}\n                onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                  onChange({...settings, other_account_description: event.target.value})} />\n            </Grid>\n            {/*<Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={settings.cash_box}\n                    color=\"primary\"\n                    onChange={() => onChange({...settings, cash_box: !settings.cash_box})} />\n                }\n                label=\"Use Cash Box for Primary Account\" />\n            </Grid>*/}\n            <Grid item xs={6}>\n              <IntInput\n                required\n                label=\"Min Num Interest\"\n                value={settings.min_num_interest}\n                onChange={min_num_interest =>\n                  onChange({...settings, min_num_interest: min_num_interest as number })} />\n            </Grid>\n            <Grid item xs={6}>\n              <IntInput\n                required\n                label=\"Min Num Expenditures\"\n                value={settings.min_num_expenditure}\n                onChange={min_num_expenditure =>\n                  onChange({...settings, min_num_expenditure: min_num_expenditure as number })} />\n            </Grid>\n          </Grid>\n        </Box>\n      </Fragment>\n    )\n  }\n\n  function renderFormatting(){\n    return (\n      <Box p={1}>\n        <Typography variant=\"h6\">Formatting</Typography>\n        <Divider />\n        <Box pt={2} pb={2}>\n          <Grid container spacing={1} alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <TextField fullWidth variant=\"outlined\"\n                label={`Month Format (e.g.: ${moment().format(settings.formatting.date_format)})`}\n                value={settings.formatting.date_format}\n                onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                  onChange({...settings, formatting: { ...settings.formatting, date_format: event.target.value }})} />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField fullWidth variant=\"outlined\"\n                label={`Month Format (e.g.: ${moment().format(settings.formatting.month_format)})`}\n                value={settings.formatting.month_format}\n                onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                  onChange({...settings, formatting: { ...settings.formatting, month_format: event.target.value }})} />\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    )\n  }\n\n  function renderMeetingDays(){\n    return (\n      <Box p={1}>\n        <Typography variant=\"h6\">Meeting Days</Typography>\n        <Divider />\n        <Box pt={2} pb={2}>\n          <Grid container spacing={1} alignItems=\"center\">\n            {renderMeetingDay('sun', 'Sunday')}\n            {renderMeetingDay('mon', 'Monday')}\n            {renderMeetingDay('tue', 'Tuesday')}\n            {renderMeetingDay('wed', 'Wednesday')}\n            {renderMeetingDay('thu', 'Thursday')}\n            {renderMeetingDay('fri', 'Friday')}\n            {renderMeetingDay('sat', 'Saturday')}\n          </Grid>\n        </Box>\n      </Box>\n    );\n  }\n\n  function renderMeetingDay(attr: 'sun'|'mon'|'tue'|'wed'|'thu'|'fri'|'sat', label: string){\n    return (\n      <Grid item xs={6} sm={4} md={3}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={settings.meeting_days[attr]}\n              color=\"primary\"\n              onChange={() => {\n                const meeting_days = { ...settings.meeting_days };\n                meeting_days[attr] = !meeting_days[attr];\n                onChange({...settings, meeting_days})\n            }} />\n          }\n          label={label} />\n      </Grid>\n    )\n  }\n\n  function renderButton(){\n    return (\n      <Box p={1}>\n        <Grid container justify=\"flex-end\">\n          <Grid item xs sm=\"auto\">\n            <Button fullWidth variant=\"contained\" type=\"submit\" color=\"primary\">\n              <EditIcon />\n              Save Changes\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    )\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {renderGeneralInfo()}\n      {renderFormatting()}\n      {renderMeetingDays()}\n      {renderButton()}\n    </form>\n  );\n}\n\nexport default SettingsForm;\n","import React, { FC, useState} from 'react';\n\nimport SettingsForm from './SettingsForm';\nimport { storeSettings } from '../SettingsService';\nimport useSettings, { setSettings } from '../useSettings';\n\nexport const SETTINGS_PATH = '/settings';\n\nexport interface SettingsControllerProps{\n  setTitle: (title: string) => void;\n}\n\nconst SettingsController: FC<SettingsControllerProps> = ({ setTitle }) => {\n  setTitle('General Settings');\n  const [internalSettings, setInternalSettings] = useState(useSettings());\n\n  function handleSubmit(){\n    storeSettings(internalSettings).then(() => setSettings(internalSettings));\n  }\n\n  return <SettingsForm settings={internalSettings} onChange={setInternalSettings} onSubmit={handleSubmit} />\n}\n\nexport default SettingsController;\n","import React, { ChangeEvent, FC, FormEvent } from 'react';\nimport { Box, Grid, TextField, Typography } from '@material-ui/core';\n\nimport CodeSelect from '../../utils/components/CodeSelect';\nimport ContributionBox from '../ContributionBox';\nimport TransactionCode, { describeTransactionCode, describeTransactionCodeShort } from '../../transactions/types/TransactionCode';\n\n\nexport const CONTRIBUTION_BOXES_PATH = '/contribution-boxes';\n\nexport interface ContributionBoxFormProps{\n  box: ContributionBox;\n  onChange: (box: ContributionBox) => void;\n  onSubmit: (box: ContributionBox) => void;\n}\n\nconst ContributionBoxForm: FC<ContributionBoxFormProps> = ({ box, onChange, onSubmit, children }) => {\n\n  function handleSubmit(event: FormEvent){\n    event.preventDefault();\n    onSubmit(box);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Box p={1} pt={2}>\n        <Grid container spacing={1} alignItems=\"center\" justify=\"flex-end\">\n          <Grid item xs={2} sm={2}>\n            <CodeSelect\n              label=\"Code\"\n              value={box.code}\n              keyFn={(code: TransactionCode) => code}\n              titleFn={(code: TransactionCode) => code}\n              descriptionFn={(code) => <Grid container spacing={2}>\n                <Grid item xs={2}>\n                  <Typography variant=\"h6\">{code}</Typography>\n                </Grid>\n                <Grid item xs>\n                  {describeTransactionCode(code)}\n                </Grid>\n              </Grid>}\n              options={Object.keys(TransactionCode) as TransactionCode[]}\n              onChange={(code: TransactionCode) => {\n                const title = describeTransactionCodeShort(code);\n                onChange({...box, code, title})\n              }} />\n          </Grid>\n          <Grid item xs={10}>\n            <TextField\n              required\n              fullWidth\n              label=\"Title\"\n              variant=\"outlined\"\n              value={box.title}\n              onChange={(event: ChangeEvent<HTMLInputElement>) => onChange({...box, title: event.target.value})} />\n          </Grid>\n          <Grid item xs={12} sm=\"auto\">\n            <Box pt={1}>\n              {children}\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </form>\n  );\n}\n\nexport default ContributionBoxForm;\n","import React, { FC, Fragment, useEffect, useState } from 'react';\nimport { Box, Button, Grid } from '@material-ui/core';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport ConfirmButton from '../../utils/components/ConfirmButton';\nimport Loader from '../../utils/components/Loader';\nimport Alert from '../../utils/components/Alert';\nimport ContributionBox from '../ContributionBox';\nimport { read, update, destroy } from '../contributionBoxService';\nimport ContributionBoxForm from './ContributionBoxForm';\nimport { CONTRIBUTION_BOXES_PATH } from './ContributionBoxesController';\n\nexport const UPDATE_CONTRIBUTION_BOX_PATH = '/contribution-box/:boxId';\n\nexport function updateContributionBoxPath(transactionId: number){\n  return UPDATE_CONTRIBUTION_BOX_PATH.replace(':boxId', transactionId.toString());\n}\n\nexport interface UpdateContributionBoxControllerProps{\n  setTitle: (title: string) => void;\n}\n\nexport interface UpdateContributionBoxControllerParams{\n  boxId: string;\n}\n\nconst UpdateContributionBoxController: FC<UpdateContributionBoxControllerProps> = ({ setTitle }) => {\n\n  setTitle('Update Contribution Box');\n  const { push } = useHistory();\n  const boxId = parseInt(useParams<UpdateContributionBoxControllerParams>().boxId as any);\n  const [working,setWorking] = useState(false);\n  const [box, setBox] = useState<ContributionBox|undefined>(undefined);\n\n  useEffect(() => {\n    let mounted = true;\n    setWorking(true);\n    read(boxId).then((box) => {\n      if(mounted){\n        setBox(box);\n        setWorking(false);\n      }\n    }, () => {\n      if(mounted){\n        setWorking(false)\n      }\n    });\n    return () => {\n      mounted = false;\n    }\n  }, [boxId]);\n\n  function handleSubmit(box: ContributionBox){\n    setWorking(true);\n    update(box).then(() => {\n      setWorking(false);\n      push(CONTRIBUTION_BOXES_PATH);\n    }, () => setWorking(false));\n  }\n\n  function handleDelete(box: ContributionBox){\n    setWorking(true);\n    update(box).then(() => {\n      destroy(box.id as number);\n      push(CONTRIBUTION_BOXES_PATH);\n    }, () => setWorking(false));\n  }\n\n  if(working){\n    return <Loader />\n  }\n\n  if(!box){\n    return <Alert msg=\"No Contribution Box Found\" />\n  }\n\n  return (\n    <Fragment>\n      <Box p={1}>\n        <Grid container justify=\"flex-end\">\n          <Grid item xs sm=\"auto\">\n            <Button fullWidth variant=\"contained\" onClick={() => push(CONTRIBUTION_BOXES_PATH)}>\n              <NavigateBeforeIcon />\n              Back to Contribution Boxes\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n      <ContributionBoxForm\n        box={box}\n        onChange={setBox}\n        onSubmit={handleSubmit}>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm=\"auto\">\n            <ConfirmButton\n              fullWidth\n              type=\"button\"\n              variant=\"contained\"\n              onClick={() => handleDelete(box)}>\n              <DeleteIcon />\n              Delete Contribution Box\n            </ConfirmButton>\n          </Grid>\n          <Grid item xs={12} sm=\"auto\">\n            <Button\n              fullWidth\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\">\n              <EditIcon />\n              Update Contribution Box\n            </Button>\n          </Grid>\n        </Grid>\n      </ContributionBoxForm>\n    </Fragment>\n  );\n}\n\nexport default UpdateContributionBoxController;\n","import React, { FC, Fragment, useState } from 'react';\nimport { Box, Button, Grid } from '@material-ui/core';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useHistory } from 'react-router-dom';\n\nimport Loader from '../../utils/components/Loader';\nimport ContributionBox from '../ContributionBox';\nimport { create, newInstance } from '../contributionBoxService';\nimport ContributionBoxForm from './ContributionBoxForm';\nimport { CONTRIBUTION_BOXES_PATH } from './ContributionBoxesController';\n\nexport const CREATE_CONTRIBUTION_BOX_PATH = '/create-contribution-box';\n\nexport interface CreateContributionBoxControllerProps{\n  setTitle: (title: string) => void;\n}\n\nconst CreateContributionBoxController: FC<CreateContributionBoxControllerProps> = ({ setTitle }) => {\n\n  setTitle('Create Contribution Box');\n  const { push } = useHistory();\n  const [working,setWorking] = useState(false);\n  const [box, setBox] = useState<ContributionBox>(newInstance);\n\n  function handleSubmit(box: ContributionBox){\n    setWorking(true);\n    create(box).then(() => {\n      setWorking(false);\n      push(CONTRIBUTION_BOXES_PATH);\n    }, () => {\n      setWorking(false);\n    });\n  }\n\n  if(working){\n    return <Loader />\n  }\n\n  return (\n    <Fragment>\n      <Box p={1}>\n        <Grid container justify=\"flex-end\">\n          <Grid item xs sm=\"auto\">\n            <Button fullWidth variant=\"contained\" onClick={() => push(CONTRIBUTION_BOXES_PATH)}>\n              <NavigateBeforeIcon />\n              Back to Contribution Boxes\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n      <ContributionBoxForm\n        box={box}\n        onChange={setBox}\n        onSubmit={handleSubmit}>\n          <Button\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\">\n            <AddIcon />\n            Create Contribution Box\n          </Button>\n      </ContributionBoxForm>\n    </Fragment>\n  );\n}\n\nexport default CreateContributionBoxController;\n","import React, { FC, Fragment, useEffect, useState } from 'react';\nimport { Box, Button, Grid } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nimport Loader from '../../utils/components/Loader';\nimport Alert from '../../utils/components/Alert';\nimport ContributionBox from '../ContributionBox';\nimport { list } from '../contributionBoxService';\nimport { updateContributionBoxPath } from './UpdateContributionBoxController';\nimport { CREATE_CONTRIBUTION_BOX_PATH } from './CreateContributionBoxController';\n\nexport const CONTRIBUTION_BOXES_PATH = '/contribution-boxes';\n\nexport interface ContributionBoxesControllerProps{\n  setTitle: (title: string) => void;\n}\n\nconst ContributionBoxesController: FC<ContributionBoxesControllerProps> = ({ setTitle }) => {\n\n  setTitle('Contribution Boxes');\n  const [working,setWorking] = useState(false);\n  const [boxes, setBoxes] = useState<ContributionBox[]|undefined>(undefined);\n  const { push } = useHistory();\n\n  useEffect(() => {\n    let mounted = true;\n    setWorking(true);\n    list().then((boxes) => {\n      if(mounted){\n        setBoxes(boxes);\n        setWorking(false);\n      }\n    }, () => {\n      if(mounted){\n        setWorking(false)\n      }\n    });\n    return () => {\n      mounted = false;\n    }\n  }, []);\n\n\n  function renderBox(box: ContributionBox){\n    return (\n      <Grid key={box.id} item xs>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          onClick={() => push(updateContributionBoxPath(box.id as number))}>\n          {box.title}\n        </Button>\n      </Grid>\n    )\n  }\n\n  if(working){\n    return <Loader />\n  }\n\n  if(!boxes){\n    return <Alert msg=\"Error retrieving Boxes\" />;\n  }\n\n  return (\n    <Fragment>\n      <Grid container direction=\"column\" spacing={1}>\n        {boxes.map(renderBox)}\n      </Grid>\n      <Box pt={2}>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          onClick={() => push(CREATE_CONTRIBUTION_BOX_PATH)}>\n          Create Contribution Box\n        </Button>\n      </Box>\n    </Fragment>\n  );\n}\n\nexport default ContributionBoxesController;\n","import React, { FC, FormEvent, useEffect, useState } from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport Loader from '../../utils/components/Loader';\nimport TransactionBreakdown from '../../transactions/types/TransactionBreakdown';\nimport BreakdownList from '../../transactions/components/BreakdownList';\nimport { loadDefaultBreakdown, storeDefaultBreakdown } from '../TransferToBranchService';\n\nexport const DEFAULT_BREAKDOWN_PATH = '/default-breakdown';\n\nexport interface DefaultBreakdownControllerProps{\n  setTitle: (title: string) => void;\n}\n\nconst DefaultBreakdownController: FC<DefaultBreakdownControllerProps> = ({ setTitle }) => {\n\n  setTitle('Default Transfer Breakdown');\n  const [working,setWorking] = useState(false);\n  const [breakdown, setBreakdown] = useState<TransactionBreakdown[]|undefined>(undefined);\n\n  useEffect(() => {\n    let mounted = true;\n    setWorking(true);\n    loadDefaultBreakdown().then(breakdown => {\n      if(mounted){\n        setBreakdown(breakdown);\n        setWorking(false);\n      }\n    }, () => {\n      if(mounted){\n        setWorking(false)\n      }\n    });\n    return () => {\n      mounted = false;\n    }\n  }, []);\n\n  function handleSubmit(event: FormEvent){\n    if(!breakdown){\n      return;\n    }\n    event.preventDefault();\n    storeDefaultBreakdown(breakdown);\n  }\n\n  function renderForm(){\n    if(!breakdown){\n      return null;\n    }\n    return (\n      <form onSubmit={handleSubmit}>\n        <BreakdownList breakdowns={breakdown} onChange={setBreakdown} amtRequired={true} />\n        <Grid container justify=\"flex-end\">\n          <Grid item xs sm=\"auto\">\n            <Button fullWidth variant=\"contained\" type=\"submit\" color=\"primary\">\n              <EditIcon />\n              Save Changes\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    );\n  }\n\n  if(working){\n    return <Loader />\n  }\n\n  return renderForm();\n\n}\n\nexport default DefaultBreakdownController;\n","import React, { FC, Component } from 'react';\nimport { Box, Button, Grid, Typography} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nimport { CREATE_MEETING_PATH } from '../meetings/components/CreateMeetingController';\nimport { CREATE_DEPOSIT_PATH } from '../deposits/components/CreateDepositController';\nimport { CREATE_TRANSFER_PATH } from '../transferToBranch/components/CreateTransferToBranchController';\nimport { CREATE_TRANSACTION_PATH } from '../transactions/components/CreateTransactionController';\nimport { monthTransactionsPath } from '../transactions/components/MonthTransactionsController';\nimport { monthListPath } from '../months/MonthListController';\nimport { SETTINGS_PATH } from '../settings/components/SettingsController';\nimport { CONTRIBUTION_BOXES_PATH } from '../contributionBoxes/components/ContributionBoxesController';\nimport { DEFAULT_BREAKDOWN_PATH } from '../transferToBranch/components/DefaultBreakdownController';\n\nexport interface NavMenuProps {\n  onClick?: () => void;\n  setTitle: (title: string) => void;\n}\n\nexport const NAV_MENU_PATH = \"/nav\"\n\nconst NavMenuController: FC<NavMenuProps> = ({ onClick, setTitle }) => {\n  setTitle('Accounts Servant Helper');\n  const { push } = useHistory();\n\n  function handleClick(destination: string){\n    push(destination);\n    if(onClick){\n      onClick();\n    }\n  }\n\n  function renderMenuItem(label: string, destination: string, icon?: Component,){\n    return (\n      <Grid item xs>\n        <Button fullWidth variant=\"contained\" onClick={() => handleClick(destination)}>\n          {icon}\n          {label}\n        </Button>\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid container direction=\"column\" spacing={1}>\n      {renderMenuItem('Add Meeting', CREATE_MEETING_PATH)}\n      {renderMenuItem('Add Deposit', CREATE_DEPOSIT_PATH)}\n      {renderMenuItem('Add Transfer To Branch', CREATE_TRANSFER_PATH)}\n      {renderMenuItem('Add Transaction', CREATE_TRANSACTION_PATH)}\n      {renderMenuItem('Current Month', monthTransactionsPath())}\n      {renderMenuItem('Select Month', monthListPath())}\n      <Grid item>\n        <Box p={1}>\n          <Typography variant=\"h6\">Settings</Typography>\n          <Grid container direction=\"column\" spacing={1}>\n            {renderMenuItem('General Settings', SETTINGS_PATH)}\n            {renderMenuItem('Contribution Boxes', CONTRIBUTION_BOXES_PATH)}\n            {renderMenuItem('Default Transfer Breakdown', DEFAULT_BREAKDOWN_PATH)}\n            {renderMenuItem('Backups', '/backups')}\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default NavMenuController;\n","import React, { FC, Fragment, ReactElement, useState } from 'react';\nimport { AppBar, Dialog, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\n\nimport useSettings from '../settings/useSettings';\nimport MsgContainer from '../utils/msgs/components/MsgContainer';\nimport MsgDialog from '../utils/msgs/components/MsgDialog';\n\nimport NavMenuController, { NAV_MENU_PATH } from './NavMenuController';\n\n\nexport interface NavBarProps {\n  children: (setTitle: (title: string) => void) => ReactElement | null;\n}\n\nconst NavBarController: FC<NavBarProps> = ({ children }) => {\n\n  const [title, setTitle] = useState('Accounts Servant Helper');\n  const [open, setOpen] = useState(false);\n  const { push } = useHistory();\n  const theme = useTheme();\n  const smUp = useMediaQuery(theme.breakpoints.up('sm'));\n  const settings = useSettings();\n\n  function handleNavMenu(){\n    if(smUp){\n      setOpen(true);\n    }else{\n      push(NAV_MENU_PATH);\n    }\n  }\n  return (\n    <Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleNavMenu}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" onClick={handleNavMenu} style={{flexGrow: 1}}>\n            {title}\n          </Typography>\n          <MsgContainer>\n            {(msgs, onClearMsgs) => <MsgDialog msgs={msgs} onClearMsgs={onClearMsgs} dateFormat={settings.formatting.date_format} />}\n          </MsgContainer>\n        </Toolbar>\n        <Dialog open={open} onClose={() => setOpen(false)}>\n          <NavMenuController onClick={() => setOpen(false)} setTitle={setTitle} />\n        </Dialog>\n      </AppBar>\n      {children(setTitle)}\n    </Fragment>\n  );\n}\n\nexport default NavBarController;\n","import { Component, ReactElement } from 'react';\nimport { subscribeToMsgs, unsubscribeFromMsgs } from '../service';\nimport Msg from '../Msg';\n\nexport interface CurrentMsgContainerProps {\n  msgTimeout?: number;\n  children: (msg: Msg|null) => ReactElement | null;\n}\n\nexport interface CurrentMsgContainerState {\n  msg: Msg|null;\n  timeoutId?: number;\n}\n\nexport default class CurrentMsgContainer extends Component<CurrentMsgContainerProps, CurrentMsgContainerState> {\n\n  state = {\n    msg: null,\n    timeoutId: undefined\n  }\n\n  static defaultProps = {\n    msgTimeout: 3000\n  }\n\n  constructor(props:CurrentMsgContainerProps){\n    super(props);\n    this.setMsgs = this.setMsgs.bind(this);\n    this.clearMsg = this.clearMsg.bind(this);\n  }\n\n  setMsgs(msgs: Msg[]){\n    const msg = msgs[msgs.length - 1];\n    if(msg){\n      window.clearInterval(this.state.timeoutId);\n      this.setState({ msg, timeoutId: window.setTimeout(this.clearMsg, this.props.msgTimeout) });\n    }\n  }\n\n  clearMsg(){\n    window.clearInterval(this.state.timeoutId);\n    this.setState({ msg: null, timeoutId: undefined});\n  }\n\n  componentDidMount(){\n    subscribeToMsgs(this.setMsgs);\n  }\n\n  componentWillUnmount(){\n    unsubscribeFromMsgs(this.setMsgs);\n    window.clearInterval(this.state.timeoutId);\n  }\n\n  render(){\n    return this.props.children(this.state.msg);\n  }\n}\n","import React, { FC, Fragment } from 'react';\nimport { AppBar, Box, Collapse, Toolbar, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport Msg from '../Msg';\nimport MsgType from '../MsgType';\nimport MsgIcon from './MsgIcon';\n\nexport interface CurrentMsgBarProps {\n  msg: Msg|null;\n}\n\nconst CurrentMsgBar: FC<CurrentMsgBarProps> = ({ msg }) => {\n\n  const theme = useTheme();\n\n  function renderMsg(){\n    if(!msg){\n      return null;\n    }\n    return (\n      <Fragment>\n        <MsgIcon msg={msg} color=\"inherit\" />\n        <Box pl={1}>\n          <Typography color=\"inherit\" style={{flexGrow: 1}}>\n            {msg.msg}\n          </Typography>\n        </Box>\n      </Fragment>\n    );\n  }\n\n  function renderStyle(){\n    if(!msg || msg.type === MsgType.Info){\n      return {};\n    }\n    return {\n      background: theme.palette.error.main,\n      color: theme.palette.error.contrastText\n    };\n  }\n\n  return (\n    <AppBar>\n      <Collapse in={!!msg}>\n        <Toolbar color=\"primary\" style={renderStyle()}>\n          {renderMsg()}\n        </Toolbar>\n      </Collapse>\n    </AppBar>\n  );\n}\n\nexport default CurrentMsgBar;\n","\nimport { TextEncoder } from 'text-encoding';\nimport moment from 'moment';\n\nimport Backup from './Backup';\nimport BackupSettings from './BackupSettings';\n\nexport const code = 'file';\nexport const title = 'Save to File';\n\nexport function save(backup: Backup, settings: BackupSettings) {\n  return new Promise<BackupSettings>((resolve) => {\n    const jsonStr = JSON.stringify(backup);\n    const arrayBuffer = new TextEncoder().encode(jsonStr);\n    const blob = new Blob([arrayBuffer], { type: 'application/json' });\n    const downloadUrl = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.download = \"ash-state-\"+moment().format('YYYYMMDD-HHMMSS');\n    a.href = downloadUrl;\n    a.style.display = 'none';\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n    resolve({ ...settings, backed_up_at: new Date().getTime()});\n    window.setTimeout(() => URL.revokeObjectURL(downloadUrl), 5000);\n  });\n}\n","\nimport DbService from '../utils/db';\nimport BackupSettings from './BackupSettings';\nimport backupSettingsSchema from './backupSettingsSchema';\n\nDbService.version(1).stores({\n  backup_settings: ''\n})\n\nfunction table(){\n  return DbService.table<BackupSettings>('backup_settings');\n}\n\nexport function load(): Promise<BackupSettings>{\n  return table().get(1);\n}\n\nexport function store(settings: BackupSettings){\n  return new Promise((resolve, reject) => {\n    backupSettingsSchema().validate(settings).then(() => {\n      table().put(settings, 1).then(resolve, reject);\n    }, reject);\n  });\n}\n","import { object } from 'yup';\n\nexport default function backupSettingsSchema(){\n  return object();\n}\n","\nimport Backup from './Backup';\nimport BackupSettings from './BackupSettings';\nimport backupSchema from './backupSchema';\nimport * as fileDAO from './FileDAO';\nimport * as transactionDAO from '../transactions/transactionDAO';\nimport * as SettingsDAO from '../settings/SettingsDAO';\nimport * as SettingsService from '../settings/SettingsService';\nimport * as contributionBoxDAO from '../contributionBoxes/contributionBoxDAO';\nimport * as transferToBranchDAO from '../transferToBranch/transferToBranchDAO';\nimport * as backupSettingsDAO from './backupSettingsDAO';\nimport { addMsg } from '../utils/msgs/service';\n\nexport function loadBackupSettings(){\n  return new Promise<BackupSettings>((resolve, reject) => {\n    backupSettingsDAO.load().then((backupSettings) => {\n      resolve(backupSettings || newBackupSettings());\n    }, reject);\n  });\n}\n\nexport function newBackupSettings(): BackupSettings{\n  return {\n    dao_code: fileDAO.code,\n    settings: null\n  }\n}\n\nexport function storeBackupSettings(settings: BackupSettings){\n  return backupSettingsDAO.store(settings);\n}\n\nexport function saveBackup(){\n  return new Promise<BackupSettings>((resolve, reject) => {\n    Promise.all([\n      createBackup(),\n      loadBackupSettings()\n    ]).then(([backup, backupSettings]) => {\n      storeBackup(backup, backupSettings).then(backupSettings => {\n        storeBackupSettings(backupSettings).then(() => resolve(backupSettings), reject);\n      }, reject);\n    }, reject);\n  });\n}\n\nexport function restoreFromBackup(backup: Backup){\n  return new Promise<BackupSettings>((resolve, reject) => {\n    backupSchema().validate(backup).then(() => {\n      clear().then(() => {\n\n        const promises = [] as Promise<any>[]\n        promises.push.apply(promises, backup.transactions.map(transaction => transactionDAO.create(transaction)));\n        promises.push(SettingsDAO.store(backup.settings));\n        promises.push(contributionBoxDAO.restore(backup.boxes));\n        promises.push(transferToBranchDAO.restore(backup.default_transaction_breakdowns));\n\n        Promise.all(promises).then(() => {\n          loadBackupSettings().then(backupSettings => {\n            backupSettings = { ...backupSettings, backed_up_at: new Date().getTime() };\n            storeBackupSettings(backupSettings).then(() => {\n              addMsg('Local State Restored from Backup');\n              resolve(backupSettings);\n            }, reject);\n          }, reject);\n        }, reject)\n\n      }, reject);\n    }, reject);\n  });\n}\n\nfunction clear(){\n  return new Promise((resolve, reject) => {\n    transactionDAO.list().then((transactions) => {\n      Promise.all(transactions.map(transaction =>\n         transactionDAO.destroy(transaction.id as number)))\n      .then(resolve, reject);\n    });\n  });\n}\n\nexport function createBackup(){\n  return new Promise<Backup>((resolve, reject) => {\n    Promise.all([\n      SettingsService.loadSettings(),\n      transactionDAO.list(),\n      contributionBoxDAO.list(),\n      transferToBranchDAO.list()\n    ]).then(([settings, transactions, boxes, default_transaction_breakdowns]) => {\n      resolve({\n        timestamp: new Date().getTime(),\n        settings,\n        transactions,\n        boxes,\n        default_transaction_breakdowns\n      })\n    }, reject)\n  });\n}\n\nexport function storeBackup(backup: Backup, settings: BackupSettings){\n  return getDAO(settings).save(backup, settings);\n}\n\nexport function getDAO(settings: BackupSettings){\n  const dao = getAvailableDAOs().find(dao => dao.code === settings.dao_code);\n  if(!dao){\n    throw new Error('Unknown DAO: '+settings.dao_code);\n  }\n  return dao;\n}\n\nexport function getAvailableDAOs(){\n  return [fileDAO];\n}\n\n\n//https://www.dropbox.com/developers/apps/create\n\n//Maybe just use the saver button? Maybe programatically save, but have a restore be from a file - a longer process...\n\n//In this case, the dropbox just becomes a boolean\n\n//Will not work - opens a window.\n","import { array, number, object } from 'yup';\nimport contributionBoxSchema from '../contributionBoxes/contributionBoxSchema';\nimport settingsSchema from '../settings/settingsSchema';\nimport transactionBreakdownSchema from '../transactions/schemas/transactionBreakdownSchema';\nimport transactionSchema from '../transactions/schemas/transactionSchema';\n\nexport default function backupSchema(){\n  return object().shape({\n    timestamp: number().positive().required(),\n    settings: settingsSchema().required(),\n    transactions: array().of(transactionSchema().required()),\n    boxes: array().of(contributionBoxSchema().required()),\n    default_transaction_breakdowns: array().of(transactionBreakdownSchema().required()),\n  })\n}\n","import React, { FC, useEffect, useState} from 'react';\nimport { Button, Grid, TextField } from '@material-ui/core';\nimport moment from 'moment';\nimport Loader from '../../utils/components/Loader';\nimport BackupSettings from '../BackupSettings';\nimport { loadBackupSettings, saveBackup, restoreFromBackup } from '../backupService';\nimport useSettings, { setSettings as setGlobalSettings } from '../../settings/useSettings';\nimport * as SettingsService from '../../settings/SettingsService';\nimport addErr from '../../utils/Err';\nimport { addMsg } from '../../utils/msgs/service';\n\n\nexport const BACKUPS_PATH = '/backups';\n\nexport interface BackupsControllerProps{\n  setTitle: (title: string) => void;\n}\n\nconst BackupsController: FC<BackupsControllerProps> = ({ setTitle }) => {\n  setTitle('Backups');\n  const [working, setWorking] = useState(false);\n  const [backupSettings, setBackupSettings] = useState<BackupSettings|undefined>(undefined);\n  const settings = useSettings();\n\n  useEffect(() => {\n    let mounted = true;\n    setWorking(true);\n    loadBackupSettings().then(backupSettings => {\n      if(mounted){\n        setBackupSettings(backupSettings);\n        setWorking(false);\n      }\n    }, (err) => {\n      addErr(err);\n      setWorking(false);\n    });\n    return () => {\n      mounted = false;\n    }\n  }, []);\n\n  function handleSave(){\n    setWorking(true);\n    saveBackup().then(backupSettings => {\n      addMsg('Backup Created');\n      setBackupSettings(backupSettings);\n      setWorking(false);\n    }, (err) => {\n      addErr(err);\n      setWorking(false);\n    });\n  }\n\n  function handleRestore(){\n    const fileSelect = document.querySelector('#backup_file') as any;\n    fileSelect.click();\n  }\n\n  function handleSelectFileForRestore(event: any){\n    var file = event.target.files[0];\n    var reader = new FileReader();\n    reader.onload = () => {\n      const jsonStr = reader.result as string;\n      const backup = JSON.parse(jsonStr);\n      restoreFromBackup(backup).then((backupSettings) => {\n        setBackupSettings(backupSettings);\n        SettingsService.loadSettings().then(setGlobalSettings)\n      });\n    }\n    reader.readAsText(file);\n  }\n\n  function renderMostRecentBackup(){\n    const backedUpAt = backupSettings && backupSettings.backed_up_at;\n    if(!backedUpAt){\n      return 'Never';\n    }\n    const m = moment(new Date(backedUpAt));\n    return m.format(`${settings.formatting.date_format} HH:mm:ss`);\n  }\n\n  if(working){\n    return <Loader />;\n  }\n\n  if(!backupSettings){\n    return null;\n  }\n\n  return (\n    <Grid container spacing={1} justify=\"flex-end\">\n      <Grid item xs={12}>\n        <TextField\n          fullWidth\n          disabled\n          variant=\"outlined\"\n          label=\"Most Recent Back Up\"\n          value={renderMostRecentBackup()} />\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleSave}>\n          Save Backup\n        </Button>\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <input\n          id=\"backup_file\"\n          type=\"file\"\n          style={{display: 'none'}}\n          onChange={handleSelectFileForRestore}\n          accept=\".json,application/json\" />\n        <Button\n          fullWidth\n          variant=\"contained\"\n          onClick={handleRestore}>\n          Restore from Backup\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default BackupsController;\n","import React from 'react';\nimport { Redirect, Route, HashRouter as Router, Switch } from \"react-router-dom\";\nimport { Box, Container } from '@material-ui/core';\n\nimport Settings from './modules/settings/Settings';\nimport SettingsLoader from './modules/settings/components/SettingsLoader';\nimport CustomTheme from './modules/utils/components/CustomTheme';\nimport NavBarController from './modules/nav/NavBarController';\nimport NavMenuController, { NAV_MENU_PATH } from './modules/nav/NavMenuController';\nimport CurrentMsgContainer from './modules/utils/msgs/components/CurrentMsgContainer';\nimport CurrentMsgBar from './modules/utils/msgs/components/CurrentMsgBar';\n\nimport './App.css';\nimport CreateMeetingController, { CREATE_MEETING_PATH } from './modules/meetings/components/CreateMeetingController';\nimport CreateDepositController, { CREATE_DEPOSIT_PATH } from './modules/deposits/components/CreateDepositController';\nimport CreateTransactionController, { CREATE_TRANSACTION_PATH } from './modules/transactions/components/CreateTransactionController';\nimport MonthTransactionsController, { MONTH_TRANSACTIONS_PATH } from './modules/transactions/components/MonthTransactionsController';\nimport MonthWarningsController, { MONTH_WARNINGS_PATH } from './modules/transactions/components/MonthWarningsController';\nimport UpdateTransactionController, { UPDATE_TRANSACTION_PATH } from './modules/transactions/components/UpdateTransactionController';\nimport DateBalanceController, { DATE_BALANCE_PATH } from './modules/transactions/components/DateBalanceController';\nimport CreateTransferToBranchController, { CREATE_TRANSFER_PATH } from './modules/transferToBranch/components/CreateTransferToBranchController';\nimport MonthListController, { MONTH_LIST_PATH } from './modules/months/MonthListController';\nimport SettingsController, { SETTINGS_PATH } from './modules/settings/components/SettingsController';\nimport ContributionBoxesController, { CONTRIBUTION_BOXES_PATH } from './modules/contributionBoxes/components/ContributionBoxesController';\nimport CreateContributionBoxController, { CREATE_CONTRIBUTION_BOX_PATH } from './modules/contributionBoxes/components/CreateContributionBoxController';\nimport UpdateContributionBoxController, { UPDATE_CONTRIBUTION_BOX_PATH } from './modules/contributionBoxes/components/UpdateContributionBoxController';\n\nimport DefaultBreakdownController, { DEFAULT_BREAKDOWN_PATH } from './modules/transferToBranch/components/DefaultBreakdownController';\nimport BackupsController, { BACKUPS_PATH } from './modules/backups/components/BackupsController';\n\n\nconst App: React.FC = () => {\n  return (\n    <SettingsLoader>\n      {(settings: Settings) => (\n        <CustomTheme>\n          <Router>\n            <NavBarController>\n              {(setTitle) => (\n                <Container>\n                  <Box pt={2} pb={2}>\n                    <Switch>\n                      <Route path={NAV_MENU_PATH} component={() => <NavMenuController setTitle={setTitle} />} />\n                      <Route path={CREATE_MEETING_PATH} component={() => <CreateMeetingController setTitle={setTitle} />} />\n                      <Route path={CREATE_DEPOSIT_PATH} component={() => <CreateDepositController setTitle={setTitle} />} />\n                      <Route path={CREATE_TRANSFER_PATH} component={() => <CreateTransferToBranchController setTitle={setTitle} />} />\n                      <Route path={CREATE_TRANSACTION_PATH} component={() => <CreateTransactionController setTitle={setTitle} />} />\n                      <Route path={UPDATE_TRANSACTION_PATH} component={() => <UpdateTransactionController setTitle={setTitle} />} />\n                      <Route path={MONTH_TRANSACTIONS_PATH} component={() => <MonthTransactionsController setTitle={setTitle} />} />\n                      <Route path={MONTH_WARNINGS_PATH} component={() => <MonthWarningsController setTitle={setTitle} />} />\n                      <Route path={DATE_BALANCE_PATH} component={() => <DateBalanceController setTitle={setTitle} />} />\n                      <Route path={MONTH_LIST_PATH} component={() => <MonthListController setTitle={setTitle} />} />\n                      <Route path={SETTINGS_PATH} component={() => <SettingsController setTitle={setTitle} />} />\n                      <Route path={CONTRIBUTION_BOXES_PATH} component={() => <ContributionBoxesController setTitle={setTitle} />} />\n                      <Route path={CREATE_CONTRIBUTION_BOX_PATH} component={() => <CreateContributionBoxController setTitle={setTitle} />} />\n                      <Route path={UPDATE_CONTRIBUTION_BOX_PATH} component={() => <UpdateContributionBoxController setTitle={setTitle} />} />\n                      <Route path={DEFAULT_BREAKDOWN_PATH} component={() => <DefaultBreakdownController setTitle={setTitle} />} />\n                      <Route path={BACKUPS_PATH} component={() => <BackupsController setTitle={setTitle} />} />\n                      <Redirect from=\"/\" exact={true} to={NAV_MENU_PATH} />\n                    </Switch>\n                  </Box>\n                </Container>\n              )}\n            </NavBarController>\n            <CurrentMsgContainer>\n              {(msg) => <CurrentMsgBar msg={msg} />}\n            </CurrentMsgContainer>\n          </Router>\n        </CustomTheme>\n      )}\n    </SettingsLoader>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}